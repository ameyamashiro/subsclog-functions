type AggregateCategory {
  count: Int!
}

type AggregateComment {
  count: Int!
}

type AggregateLink {
  count: Int!
}

type AggregateReview {
  count: Int!
}

type AggregateService {
  count: Int!
}

type BatchPayload {
  count: Long!
}

type Category {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  services(
    where: ServiceWhereInput
    orderBy: ServiceOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Service!]
  shortDescription: String!
  description: String!
}

type CategoryConnection {
  pageInfo: PageInfo!
  edges: [CategoryEdge]!
  aggregate: AggregateCategory!
}

input CategoryCreateInput {
  name: String!
  services: ServiceCreateManyWithoutCategoryInput
  shortDescription: String!
  description: String!
}

input CategoryCreateOneWithoutServicesInput {
  create: CategoryCreateWithoutServicesInput
  connect: CategoryWhereUniqueInput
}

input CategoryCreateWithoutServicesInput {
  name: String!
  shortDescription: String!
  description: String!
}

type CategoryEdge {
  node: Category!
  cursor: String!
}

enum CategoryOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  name_ASC
  name_DESC
  shortDescription_ASC
  shortDescription_DESC
  description_ASC
  description_DESC
}

type CategoryPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  shortDescription: String!
  description: String!
}

type CategorySubscriptionPayload {
  mutation: MutationType!
  node: Category
  updatedFields: [String!]
  previousValues: CategoryPreviousValues
}

input CategorySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: CategoryWhereInput
  AND: [CategorySubscriptionWhereInput!]
  OR: [CategorySubscriptionWhereInput!]
  NOT: [CategorySubscriptionWhereInput!]
}

input CategoryUpdateInput {
  name: String
  services: ServiceUpdateManyWithoutCategoryInput
  shortDescription: String
  description: String
}

input CategoryUpdateManyMutationInput {
  name: String
  shortDescription: String
  description: String
}

input CategoryUpdateOneWithoutServicesInput {
  create: CategoryCreateWithoutServicesInput
  update: CategoryUpdateWithoutServicesDataInput
  upsert: CategoryUpsertWithoutServicesInput
  delete: Boolean
  disconnect: Boolean
  connect: CategoryWhereUniqueInput
}

input CategoryUpdateWithoutServicesDataInput {
  name: String
  shortDescription: String
  description: String
}

input CategoryUpsertWithoutServicesInput {
  update: CategoryUpdateWithoutServicesDataInput!
  create: CategoryCreateWithoutServicesInput!
}

input CategoryWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  services_every: ServiceWhereInput
  services_some: ServiceWhereInput
  services_none: ServiceWhereInput
  shortDescription: String
  shortDescription_not: String
  shortDescription_in: [String!]
  shortDescription_not_in: [String!]
  shortDescription_lt: String
  shortDescription_lte: String
  shortDescription_gt: String
  shortDescription_gte: String
  shortDescription_contains: String
  shortDescription_not_contains: String
  shortDescription_starts_with: String
  shortDescription_not_starts_with: String
  shortDescription_ends_with: String
  shortDescription_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  AND: [CategoryWhereInput!]
  OR: [CategoryWhereInput!]
  NOT: [CategoryWhereInput!]
}

input CategoryWhereUniqueInput {
  id: ID
}

type Comment {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  text: String!
  service: Service!
  ownerId: String
}

type CommentConnection {
  pageInfo: PageInfo!
  edges: [CommentEdge]!
  aggregate: AggregateComment!
}

input CommentCreateInput {
  text: String!
  service: ServiceCreateOneInput!
  ownerId: String
}

type CommentEdge {
  node: Comment!
  cursor: String!
}

enum CommentOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  text_ASC
  text_DESC
  ownerId_ASC
  ownerId_DESC
}

type CommentPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  text: String!
  ownerId: String
}

type CommentSubscriptionPayload {
  mutation: MutationType!
  node: Comment
  updatedFields: [String!]
  previousValues: CommentPreviousValues
}

input CommentSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: CommentWhereInput
  AND: [CommentSubscriptionWhereInput!]
  OR: [CommentSubscriptionWhereInput!]
  NOT: [CommentSubscriptionWhereInput!]
}

input CommentUpdateInput {
  text: String
  service: ServiceUpdateOneRequiredInput
  ownerId: String
}

input CommentUpdateManyMutationInput {
  text: String
  ownerId: String
}

input CommentWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  text: String
  text_not: String
  text_in: [String!]
  text_not_in: [String!]
  text_lt: String
  text_lte: String
  text_gt: String
  text_gte: String
  text_contains: String
  text_not_contains: String
  text_starts_with: String
  text_not_starts_with: String
  text_ends_with: String
  text_not_ends_with: String
  service: ServiceWhereInput
  ownerId: String
  ownerId_not: String
  ownerId_in: [String!]
  ownerId_not_in: [String!]
  ownerId_lt: String
  ownerId_lte: String
  ownerId_gt: String
  ownerId_gte: String
  ownerId_contains: String
  ownerId_not_contains: String
  ownerId_starts_with: String
  ownerId_not_starts_with: String
  ownerId_ends_with: String
  ownerId_not_ends_with: String
  AND: [CommentWhereInput!]
  OR: [CommentWhereInput!]
  NOT: [CommentWhereInput!]
}

input CommentWhereUniqueInput {
  id: ID
}

scalar DateTime

type Link {
  id: ID!
  author: String
  content: String
  description: String
  publishedAt: DateTime!
  sourceId: String
  sourceName: String
  title: String!
  url: String!
}

type LinkConnection {
  pageInfo: PageInfo!
  edges: [LinkEdge]!
  aggregate: AggregateLink!
}

input LinkCreateInput {
  author: String
  content: String
  description: String
  publishedAt: DateTime!
  sourceId: String
  sourceName: String
  title: String!
  url: String!
}

type LinkEdge {
  node: Link!
  cursor: String!
}

enum LinkOrderByInput {
  id_ASC
  id_DESC
  author_ASC
  author_DESC
  content_ASC
  content_DESC
  description_ASC
  description_DESC
  publishedAt_ASC
  publishedAt_DESC
  sourceId_ASC
  sourceId_DESC
  sourceName_ASC
  sourceName_DESC
  title_ASC
  title_DESC
  url_ASC
  url_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type LinkPreviousValues {
  id: ID!
  author: String
  content: String
  description: String
  publishedAt: DateTime!
  sourceId: String
  sourceName: String
  title: String!
  url: String!
}

type LinkSubscriptionPayload {
  mutation: MutationType!
  node: Link
  updatedFields: [String!]
  previousValues: LinkPreviousValues
}

input LinkSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: LinkWhereInput
  AND: [LinkSubscriptionWhereInput!]
  OR: [LinkSubscriptionWhereInput!]
  NOT: [LinkSubscriptionWhereInput!]
}

input LinkUpdateInput {
  author: String
  content: String
  description: String
  publishedAt: DateTime
  sourceId: String
  sourceName: String
  title: String
  url: String
}

input LinkUpdateManyMutationInput {
  author: String
  content: String
  description: String
  publishedAt: DateTime
  sourceId: String
  sourceName: String
  title: String
  url: String
}

input LinkWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  author: String
  author_not: String
  author_in: [String!]
  author_not_in: [String!]
  author_lt: String
  author_lte: String
  author_gt: String
  author_gte: String
  author_contains: String
  author_not_contains: String
  author_starts_with: String
  author_not_starts_with: String
  author_ends_with: String
  author_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  publishedAt: DateTime
  publishedAt_not: DateTime
  publishedAt_in: [DateTime!]
  publishedAt_not_in: [DateTime!]
  publishedAt_lt: DateTime
  publishedAt_lte: DateTime
  publishedAt_gt: DateTime
  publishedAt_gte: DateTime
  sourceId: String
  sourceId_not: String
  sourceId_in: [String!]
  sourceId_not_in: [String!]
  sourceId_lt: String
  sourceId_lte: String
  sourceId_gt: String
  sourceId_gte: String
  sourceId_contains: String
  sourceId_not_contains: String
  sourceId_starts_with: String
  sourceId_not_starts_with: String
  sourceId_ends_with: String
  sourceId_not_ends_with: String
  sourceName: String
  sourceName_not: String
  sourceName_in: [String!]
  sourceName_not_in: [String!]
  sourceName_lt: String
  sourceName_lte: String
  sourceName_gt: String
  sourceName_gte: String
  sourceName_contains: String
  sourceName_not_contains: String
  sourceName_starts_with: String
  sourceName_not_starts_with: String
  sourceName_ends_with: String
  sourceName_not_ends_with: String
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  url: String
  url_not: String
  url_in: [String!]
  url_not_in: [String!]
  url_lt: String
  url_lte: String
  url_gt: String
  url_gte: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  AND: [LinkWhereInput!]
  OR: [LinkWhereInput!]
  NOT: [LinkWhereInput!]
}

input LinkWhereUniqueInput {
  id: ID
  url: String
}

scalar Long

type Mutation {
  createCategory(data: CategoryCreateInput!): Category!
  updateCategory(
    data: CategoryUpdateInput!
    where: CategoryWhereUniqueInput!
  ): Category
  updateManyCategories(
    data: CategoryUpdateManyMutationInput!
    where: CategoryWhereInput
  ): BatchPayload!
  upsertCategory(
    where: CategoryWhereUniqueInput!
    create: CategoryCreateInput!
    update: CategoryUpdateInput!
  ): Category!
  deleteCategory(where: CategoryWhereUniqueInput!): Category
  deleteManyCategories(where: CategoryWhereInput): BatchPayload!
  createComment(data: CommentCreateInput!): Comment!
  updateComment(
    data: CommentUpdateInput!
    where: CommentWhereUniqueInput!
  ): Comment
  updateManyComments(
    data: CommentUpdateManyMutationInput!
    where: CommentWhereInput
  ): BatchPayload!
  upsertComment(
    where: CommentWhereUniqueInput!
    create: CommentCreateInput!
    update: CommentUpdateInput!
  ): Comment!
  deleteComment(where: CommentWhereUniqueInput!): Comment
  deleteManyComments(where: CommentWhereInput): BatchPayload!
  createLink(data: LinkCreateInput!): Link!
  updateLink(data: LinkUpdateInput!, where: LinkWhereUniqueInput!): Link
  updateManyLinks(
    data: LinkUpdateManyMutationInput!
    where: LinkWhereInput
  ): BatchPayload!
  upsertLink(
    where: LinkWhereUniqueInput!
    create: LinkCreateInput!
    update: LinkUpdateInput!
  ): Link!
  deleteLink(where: LinkWhereUniqueInput!): Link
  deleteManyLinks(where: LinkWhereInput): BatchPayload!
  createReview(data: ReviewCreateInput!): Review!
  updateReview(data: ReviewUpdateInput!, where: ReviewWhereUniqueInput!): Review
  updateManyReviews(
    data: ReviewUpdateManyMutationInput!
    where: ReviewWhereInput
  ): BatchPayload!
  upsertReview(
    where: ReviewWhereUniqueInput!
    create: ReviewCreateInput!
    update: ReviewUpdateInput!
  ): Review!
  deleteReview(where: ReviewWhereUniqueInput!): Review
  deleteManyReviews(where: ReviewWhereInput): BatchPayload!
  createService(data: ServiceCreateInput!): Service!
  updateService(
    data: ServiceUpdateInput!
    where: ServiceWhereUniqueInput!
  ): Service
  updateManyServices(
    data: ServiceUpdateManyMutationInput!
    where: ServiceWhereInput
  ): BatchPayload!
  upsertService(
    where: ServiceWhereUniqueInput!
    create: ServiceCreateInput!
    update: ServiceUpdateInput!
  ): Service!
  deleteService(where: ServiceWhereUniqueInput!): Service
  deleteManyServices(where: ServiceWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  category(where: CategoryWhereUniqueInput!): Category
  categories(
    where: CategoryWhereInput
    orderBy: CategoryOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Category]!
  categoriesConnection(
    where: CategoryWhereInput
    orderBy: CategoryOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): CategoryConnection!
  comment(where: CommentWhereUniqueInput!): Comment
  comments(
    where: CommentWhereInput
    orderBy: CommentOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Comment]!
  commentsConnection(
    where: CommentWhereInput
    orderBy: CommentOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): CommentConnection!
  link(where: LinkWhereUniqueInput!): Link
  links(
    where: LinkWhereInput
    orderBy: LinkOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Link]!
  linksConnection(
    where: LinkWhereInput
    orderBy: LinkOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): LinkConnection!
  review(where: ReviewWhereUniqueInput!): Review
  reviews(
    where: ReviewWhereInput
    orderBy: ReviewOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Review]!
  reviewsConnection(
    where: ReviewWhereInput
    orderBy: ReviewOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): ReviewConnection!
  service(where: ServiceWhereUniqueInput!): Service
  services(
    where: ServiceWhereInput
    orderBy: ServiceOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Service]!
  servicesConnection(
    where: ServiceWhereInput
    orderBy: ServiceOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): ServiceConnection!
  node(id: ID!): Node
}

type Review {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  rate: Int
  rating: Int!
  text: String!
  serviceId: String!
  service: Service!
  ownerId: String
}

type ReviewConnection {
  pageInfo: PageInfo!
  edges: [ReviewEdge]!
  aggregate: AggregateReview!
}

input ReviewCreateInput {
  rate: Int
  rating: Int!
  text: String!
  serviceId: String!
  service: ServiceCreateOneWithoutReviewsInput!
  ownerId: String
}

input ReviewCreateManyWithoutServiceInput {
  create: [ReviewCreateWithoutServiceInput!]
  connect: [ReviewWhereUniqueInput!]
}

input ReviewCreateWithoutServiceInput {
  rate: Int
  rating: Int!
  text: String!
  serviceId: String!
  ownerId: String
}

type ReviewEdge {
  node: Review!
  cursor: String!
}

enum ReviewOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  rate_ASC
  rate_DESC
  rating_ASC
  rating_DESC
  text_ASC
  text_DESC
  serviceId_ASC
  serviceId_DESC
  ownerId_ASC
  ownerId_DESC
}

type ReviewPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  rate: Int
  rating: Int!
  text: String!
  serviceId: String!
  ownerId: String
}

input ReviewScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  rate: Int
  rate_not: Int
  rate_in: [Int!]
  rate_not_in: [Int!]
  rate_lt: Int
  rate_lte: Int
  rate_gt: Int
  rate_gte: Int
  rating: Int
  rating_not: Int
  rating_in: [Int!]
  rating_not_in: [Int!]
  rating_lt: Int
  rating_lte: Int
  rating_gt: Int
  rating_gte: Int
  text: String
  text_not: String
  text_in: [String!]
  text_not_in: [String!]
  text_lt: String
  text_lte: String
  text_gt: String
  text_gte: String
  text_contains: String
  text_not_contains: String
  text_starts_with: String
  text_not_starts_with: String
  text_ends_with: String
  text_not_ends_with: String
  serviceId: String
  serviceId_not: String
  serviceId_in: [String!]
  serviceId_not_in: [String!]
  serviceId_lt: String
  serviceId_lte: String
  serviceId_gt: String
  serviceId_gte: String
  serviceId_contains: String
  serviceId_not_contains: String
  serviceId_starts_with: String
  serviceId_not_starts_with: String
  serviceId_ends_with: String
  serviceId_not_ends_with: String
  ownerId: String
  ownerId_not: String
  ownerId_in: [String!]
  ownerId_not_in: [String!]
  ownerId_lt: String
  ownerId_lte: String
  ownerId_gt: String
  ownerId_gte: String
  ownerId_contains: String
  ownerId_not_contains: String
  ownerId_starts_with: String
  ownerId_not_starts_with: String
  ownerId_ends_with: String
  ownerId_not_ends_with: String
  AND: [ReviewScalarWhereInput!]
  OR: [ReviewScalarWhereInput!]
  NOT: [ReviewScalarWhereInput!]
}

type ReviewSubscriptionPayload {
  mutation: MutationType!
  node: Review
  updatedFields: [String!]
  previousValues: ReviewPreviousValues
}

input ReviewSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ReviewWhereInput
  AND: [ReviewSubscriptionWhereInput!]
  OR: [ReviewSubscriptionWhereInput!]
  NOT: [ReviewSubscriptionWhereInput!]
}

input ReviewUpdateInput {
  rate: Int
  rating: Int
  text: String
  serviceId: String
  service: ServiceUpdateOneRequiredWithoutReviewsInput
  ownerId: String
}

input ReviewUpdateManyDataInput {
  rate: Int
  rating: Int
  text: String
  serviceId: String
  ownerId: String
}

input ReviewUpdateManyMutationInput {
  rate: Int
  rating: Int
  text: String
  serviceId: String
  ownerId: String
}

input ReviewUpdateManyWithoutServiceInput {
  create: [ReviewCreateWithoutServiceInput!]
  delete: [ReviewWhereUniqueInput!]
  connect: [ReviewWhereUniqueInput!]
  set: [ReviewWhereUniqueInput!]
  disconnect: [ReviewWhereUniqueInput!]
  update: [ReviewUpdateWithWhereUniqueWithoutServiceInput!]
  upsert: [ReviewUpsertWithWhereUniqueWithoutServiceInput!]
  deleteMany: [ReviewScalarWhereInput!]
  updateMany: [ReviewUpdateManyWithWhereNestedInput!]
}

input ReviewUpdateManyWithWhereNestedInput {
  where: ReviewScalarWhereInput!
  data: ReviewUpdateManyDataInput!
}

input ReviewUpdateWithoutServiceDataInput {
  rate: Int
  rating: Int
  text: String
  serviceId: String
  ownerId: String
}

input ReviewUpdateWithWhereUniqueWithoutServiceInput {
  where: ReviewWhereUniqueInput!
  data: ReviewUpdateWithoutServiceDataInput!
}

input ReviewUpsertWithWhereUniqueWithoutServiceInput {
  where: ReviewWhereUniqueInput!
  update: ReviewUpdateWithoutServiceDataInput!
  create: ReviewCreateWithoutServiceInput!
}

input ReviewWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  rate: Int
  rate_not: Int
  rate_in: [Int!]
  rate_not_in: [Int!]
  rate_lt: Int
  rate_lte: Int
  rate_gt: Int
  rate_gte: Int
  rating: Int
  rating_not: Int
  rating_in: [Int!]
  rating_not_in: [Int!]
  rating_lt: Int
  rating_lte: Int
  rating_gt: Int
  rating_gte: Int
  text: String
  text_not: String
  text_in: [String!]
  text_not_in: [String!]
  text_lt: String
  text_lte: String
  text_gt: String
  text_gte: String
  text_contains: String
  text_not_contains: String
  text_starts_with: String
  text_not_starts_with: String
  text_ends_with: String
  text_not_ends_with: String
  serviceId: String
  serviceId_not: String
  serviceId_in: [String!]
  serviceId_not_in: [String!]
  serviceId_lt: String
  serviceId_lte: String
  serviceId_gt: String
  serviceId_gte: String
  serviceId_contains: String
  serviceId_not_contains: String
  serviceId_starts_with: String
  serviceId_not_starts_with: String
  serviceId_ends_with: String
  serviceId_not_ends_with: String
  service: ServiceWhereInput
  ownerId: String
  ownerId_not: String
  ownerId_in: [String!]
  ownerId_not_in: [String!]
  ownerId_lt: String
  ownerId_lte: String
  ownerId_gt: String
  ownerId_gte: String
  ownerId_contains: String
  ownerId_not_contains: String
  ownerId_starts_with: String
  ownerId_not_starts_with: String
  ownerId_ends_with: String
  ownerId_not_ends_with: String
  AND: [ReviewWhereInput!]
  OR: [ReviewWhereInput!]
  NOT: [ReviewWhereInput!]
}

input ReviewWhereUniqueInput {
  id: ID
}

type Service {
  address: String
  category: Category
  createdAt: DateTime!
  description: String!
  freetrial: String
  hashtag: String
  id: ID!
  inquiry: String
  isOnline: Boolean
  likeCount: Int!
  multiplans: String
  note: String
  phonenumber: String
  photoURL: String
  place: String
  price: Float
  rating: Int
  ratingCount: Int
  reviews(
    where: ReviewWhereInput
    orderBy: ReviewOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Review!]
  tagline: String
  title: String!
  twitterId: String
  twitterUserId: String
  updatedAt: DateTime!
  url: String
  viewCount: Int!
  yomigana: String
}

type ServiceConnection {
  pageInfo: PageInfo!
  edges: [ServiceEdge]!
  aggregate: AggregateService!
}

input ServiceCreateInput {
  address: String
  category: CategoryCreateOneWithoutServicesInput
  description: String!
  freetrial: String
  hashtag: String
  inquiry: String
  isOnline: Boolean
  likeCount: Int
  multiplans: String
  note: String
  phonenumber: String
  photoURL: String
  place: String
  price: Float
  rating: Int
  ratingCount: Int
  reviews: ReviewCreateManyWithoutServiceInput
  tagline: String
  title: String!
  twitterId: String
  twitterUserId: String
  url: String
  viewCount: Int
  yomigana: String
}

input ServiceCreateManyWithoutCategoryInput {
  create: [ServiceCreateWithoutCategoryInput!]
  connect: [ServiceWhereUniqueInput!]
}

input ServiceCreateOneInput {
  create: ServiceCreateInput
  connect: ServiceWhereUniqueInput
}

input ServiceCreateOneWithoutReviewsInput {
  create: ServiceCreateWithoutReviewsInput
  connect: ServiceWhereUniqueInput
}

input ServiceCreateWithoutCategoryInput {
  address: String
  description: String!
  freetrial: String
  hashtag: String
  inquiry: String
  isOnline: Boolean
  likeCount: Int
  multiplans: String
  note: String
  phonenumber: String
  photoURL: String
  place: String
  price: Float
  rating: Int
  ratingCount: Int
  reviews: ReviewCreateManyWithoutServiceInput
  tagline: String
  title: String!
  twitterId: String
  twitterUserId: String
  url: String
  viewCount: Int
  yomigana: String
}

input ServiceCreateWithoutReviewsInput {
  address: String
  category: CategoryCreateOneWithoutServicesInput
  description: String!
  freetrial: String
  hashtag: String
  inquiry: String
  isOnline: Boolean
  likeCount: Int
  multiplans: String
  note: String
  phonenumber: String
  photoURL: String
  place: String
  price: Float
  rating: Int
  ratingCount: Int
  tagline: String
  title: String!
  twitterId: String
  twitterUserId: String
  url: String
  viewCount: Int
  yomigana: String
}

type ServiceEdge {
  node: Service!
  cursor: String!
}

enum ServiceOrderByInput {
  address_ASC
  address_DESC
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  freetrial_ASC
  freetrial_DESC
  hashtag_ASC
  hashtag_DESC
  id_ASC
  id_DESC
  inquiry_ASC
  inquiry_DESC
  isOnline_ASC
  isOnline_DESC
  likeCount_ASC
  likeCount_DESC
  multiplans_ASC
  multiplans_DESC
  note_ASC
  note_DESC
  phonenumber_ASC
  phonenumber_DESC
  photoURL_ASC
  photoURL_DESC
  place_ASC
  place_DESC
  price_ASC
  price_DESC
  rating_ASC
  rating_DESC
  ratingCount_ASC
  ratingCount_DESC
  tagline_ASC
  tagline_DESC
  title_ASC
  title_DESC
  twitterId_ASC
  twitterId_DESC
  twitterUserId_ASC
  twitterUserId_DESC
  updatedAt_ASC
  updatedAt_DESC
  url_ASC
  url_DESC
  viewCount_ASC
  viewCount_DESC
  yomigana_ASC
  yomigana_DESC
}

type ServicePreviousValues {
  address: String
  createdAt: DateTime!
  description: String!
  freetrial: String
  hashtag: String
  id: ID!
  inquiry: String
  isOnline: Boolean
  likeCount: Int!
  multiplans: String
  note: String
  phonenumber: String
  photoURL: String
  place: String
  price: Float
  rating: Int
  ratingCount: Int
  tagline: String
  title: String!
  twitterId: String
  twitterUserId: String
  updatedAt: DateTime!
  url: String
  viewCount: Int!
  yomigana: String
}

input ServiceScalarWhereInput {
  address: String
  address_not: String
  address_in: [String!]
  address_not_in: [String!]
  address_lt: String
  address_lte: String
  address_gt: String
  address_gte: String
  address_contains: String
  address_not_contains: String
  address_starts_with: String
  address_not_starts_with: String
  address_ends_with: String
  address_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  freetrial: String
  freetrial_not: String
  freetrial_in: [String!]
  freetrial_not_in: [String!]
  freetrial_lt: String
  freetrial_lte: String
  freetrial_gt: String
  freetrial_gte: String
  freetrial_contains: String
  freetrial_not_contains: String
  freetrial_starts_with: String
  freetrial_not_starts_with: String
  freetrial_ends_with: String
  freetrial_not_ends_with: String
  hashtag: String
  hashtag_not: String
  hashtag_in: [String!]
  hashtag_not_in: [String!]
  hashtag_lt: String
  hashtag_lte: String
  hashtag_gt: String
  hashtag_gte: String
  hashtag_contains: String
  hashtag_not_contains: String
  hashtag_starts_with: String
  hashtag_not_starts_with: String
  hashtag_ends_with: String
  hashtag_not_ends_with: String
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  inquiry: String
  inquiry_not: String
  inquiry_in: [String!]
  inquiry_not_in: [String!]
  inquiry_lt: String
  inquiry_lte: String
  inquiry_gt: String
  inquiry_gte: String
  inquiry_contains: String
  inquiry_not_contains: String
  inquiry_starts_with: String
  inquiry_not_starts_with: String
  inquiry_ends_with: String
  inquiry_not_ends_with: String
  isOnline: Boolean
  isOnline_not: Boolean
  likeCount: Int
  likeCount_not: Int
  likeCount_in: [Int!]
  likeCount_not_in: [Int!]
  likeCount_lt: Int
  likeCount_lte: Int
  likeCount_gt: Int
  likeCount_gte: Int
  multiplans: String
  multiplans_not: String
  multiplans_in: [String!]
  multiplans_not_in: [String!]
  multiplans_lt: String
  multiplans_lte: String
  multiplans_gt: String
  multiplans_gte: String
  multiplans_contains: String
  multiplans_not_contains: String
  multiplans_starts_with: String
  multiplans_not_starts_with: String
  multiplans_ends_with: String
  multiplans_not_ends_with: String
  note: String
  note_not: String
  note_in: [String!]
  note_not_in: [String!]
  note_lt: String
  note_lte: String
  note_gt: String
  note_gte: String
  note_contains: String
  note_not_contains: String
  note_starts_with: String
  note_not_starts_with: String
  note_ends_with: String
  note_not_ends_with: String
  phonenumber: String
  phonenumber_not: String
  phonenumber_in: [String!]
  phonenumber_not_in: [String!]
  phonenumber_lt: String
  phonenumber_lte: String
  phonenumber_gt: String
  phonenumber_gte: String
  phonenumber_contains: String
  phonenumber_not_contains: String
  phonenumber_starts_with: String
  phonenumber_not_starts_with: String
  phonenumber_ends_with: String
  phonenumber_not_ends_with: String
  photoURL: String
  photoURL_not: String
  photoURL_in: [String!]
  photoURL_not_in: [String!]
  photoURL_lt: String
  photoURL_lte: String
  photoURL_gt: String
  photoURL_gte: String
  photoURL_contains: String
  photoURL_not_contains: String
  photoURL_starts_with: String
  photoURL_not_starts_with: String
  photoURL_ends_with: String
  photoURL_not_ends_with: String
  place: String
  place_not: String
  place_in: [String!]
  place_not_in: [String!]
  place_lt: String
  place_lte: String
  place_gt: String
  place_gte: String
  place_contains: String
  place_not_contains: String
  place_starts_with: String
  place_not_starts_with: String
  place_ends_with: String
  place_not_ends_with: String
  price: Float
  price_not: Float
  price_in: [Float!]
  price_not_in: [Float!]
  price_lt: Float
  price_lte: Float
  price_gt: Float
  price_gte: Float
  rating: Int
  rating_not: Int
  rating_in: [Int!]
  rating_not_in: [Int!]
  rating_lt: Int
  rating_lte: Int
  rating_gt: Int
  rating_gte: Int
  ratingCount: Int
  ratingCount_not: Int
  ratingCount_in: [Int!]
  ratingCount_not_in: [Int!]
  ratingCount_lt: Int
  ratingCount_lte: Int
  ratingCount_gt: Int
  ratingCount_gte: Int
  tagline: String
  tagline_not: String
  tagline_in: [String!]
  tagline_not_in: [String!]
  tagline_lt: String
  tagline_lte: String
  tagline_gt: String
  tagline_gte: String
  tagline_contains: String
  tagline_not_contains: String
  tagline_starts_with: String
  tagline_not_starts_with: String
  tagline_ends_with: String
  tagline_not_ends_with: String
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  twitterId: String
  twitterId_not: String
  twitterId_in: [String!]
  twitterId_not_in: [String!]
  twitterId_lt: String
  twitterId_lte: String
  twitterId_gt: String
  twitterId_gte: String
  twitterId_contains: String
  twitterId_not_contains: String
  twitterId_starts_with: String
  twitterId_not_starts_with: String
  twitterId_ends_with: String
  twitterId_not_ends_with: String
  twitterUserId: String
  twitterUserId_not: String
  twitterUserId_in: [String!]
  twitterUserId_not_in: [String!]
  twitterUserId_lt: String
  twitterUserId_lte: String
  twitterUserId_gt: String
  twitterUserId_gte: String
  twitterUserId_contains: String
  twitterUserId_not_contains: String
  twitterUserId_starts_with: String
  twitterUserId_not_starts_with: String
  twitterUserId_ends_with: String
  twitterUserId_not_ends_with: String
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  url: String
  url_not: String
  url_in: [String!]
  url_not_in: [String!]
  url_lt: String
  url_lte: String
  url_gt: String
  url_gte: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  viewCount: Int
  viewCount_not: Int
  viewCount_in: [Int!]
  viewCount_not_in: [Int!]
  viewCount_lt: Int
  viewCount_lte: Int
  viewCount_gt: Int
  viewCount_gte: Int
  yomigana: String
  yomigana_not: String
  yomigana_in: [String!]
  yomigana_not_in: [String!]
  yomigana_lt: String
  yomigana_lte: String
  yomigana_gt: String
  yomigana_gte: String
  yomigana_contains: String
  yomigana_not_contains: String
  yomigana_starts_with: String
  yomigana_not_starts_with: String
  yomigana_ends_with: String
  yomigana_not_ends_with: String
  AND: [ServiceScalarWhereInput!]
  OR: [ServiceScalarWhereInput!]
  NOT: [ServiceScalarWhereInput!]
}

type ServiceSubscriptionPayload {
  mutation: MutationType!
  node: Service
  updatedFields: [String!]
  previousValues: ServicePreviousValues
}

input ServiceSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ServiceWhereInput
  AND: [ServiceSubscriptionWhereInput!]
  OR: [ServiceSubscriptionWhereInput!]
  NOT: [ServiceSubscriptionWhereInput!]
}

input ServiceUpdateDataInput {
  address: String
  category: CategoryUpdateOneWithoutServicesInput
  description: String
  freetrial: String
  hashtag: String
  inquiry: String
  isOnline: Boolean
  likeCount: Int
  multiplans: String
  note: String
  phonenumber: String
  photoURL: String
  place: String
  price: Float
  rating: Int
  ratingCount: Int
  reviews: ReviewUpdateManyWithoutServiceInput
  tagline: String
  title: String
  twitterId: String
  twitterUserId: String
  url: String
  viewCount: Int
  yomigana: String
}

input ServiceUpdateInput {
  address: String
  category: CategoryUpdateOneWithoutServicesInput
  description: String
  freetrial: String
  hashtag: String
  inquiry: String
  isOnline: Boolean
  likeCount: Int
  multiplans: String
  note: String
  phonenumber: String
  photoURL: String
  place: String
  price: Float
  rating: Int
  ratingCount: Int
  reviews: ReviewUpdateManyWithoutServiceInput
  tagline: String
  title: String
  twitterId: String
  twitterUserId: String
  url: String
  viewCount: Int
  yomigana: String
}

input ServiceUpdateManyDataInput {
  address: String
  description: String
  freetrial: String
  hashtag: String
  inquiry: String
  isOnline: Boolean
  likeCount: Int
  multiplans: String
  note: String
  phonenumber: String
  photoURL: String
  place: String
  price: Float
  rating: Int
  ratingCount: Int
  tagline: String
  title: String
  twitterId: String
  twitterUserId: String
  url: String
  viewCount: Int
  yomigana: String
}

input ServiceUpdateManyMutationInput {
  address: String
  description: String
  freetrial: String
  hashtag: String
  inquiry: String
  isOnline: Boolean
  likeCount: Int
  multiplans: String
  note: String
  phonenumber: String
  photoURL: String
  place: String
  price: Float
  rating: Int
  ratingCount: Int
  tagline: String
  title: String
  twitterId: String
  twitterUserId: String
  url: String
  viewCount: Int
  yomigana: String
}

input ServiceUpdateManyWithoutCategoryInput {
  create: [ServiceCreateWithoutCategoryInput!]
  delete: [ServiceWhereUniqueInput!]
  connect: [ServiceWhereUniqueInput!]
  set: [ServiceWhereUniqueInput!]
  disconnect: [ServiceWhereUniqueInput!]
  update: [ServiceUpdateWithWhereUniqueWithoutCategoryInput!]
  upsert: [ServiceUpsertWithWhereUniqueWithoutCategoryInput!]
  deleteMany: [ServiceScalarWhereInput!]
  updateMany: [ServiceUpdateManyWithWhereNestedInput!]
}

input ServiceUpdateManyWithWhereNestedInput {
  where: ServiceScalarWhereInput!
  data: ServiceUpdateManyDataInput!
}

input ServiceUpdateOneRequiredInput {
  create: ServiceCreateInput
  update: ServiceUpdateDataInput
  upsert: ServiceUpsertNestedInput
  connect: ServiceWhereUniqueInput
}

input ServiceUpdateOneRequiredWithoutReviewsInput {
  create: ServiceCreateWithoutReviewsInput
  update: ServiceUpdateWithoutReviewsDataInput
  upsert: ServiceUpsertWithoutReviewsInput
  connect: ServiceWhereUniqueInput
}

input ServiceUpdateWithoutCategoryDataInput {
  address: String
  description: String
  freetrial: String
  hashtag: String
  inquiry: String
  isOnline: Boolean
  likeCount: Int
  multiplans: String
  note: String
  phonenumber: String
  photoURL: String
  place: String
  price: Float
  rating: Int
  ratingCount: Int
  reviews: ReviewUpdateManyWithoutServiceInput
  tagline: String
  title: String
  twitterId: String
  twitterUserId: String
  url: String
  viewCount: Int
  yomigana: String
}

input ServiceUpdateWithoutReviewsDataInput {
  address: String
  category: CategoryUpdateOneWithoutServicesInput
  description: String
  freetrial: String
  hashtag: String
  inquiry: String
  isOnline: Boolean
  likeCount: Int
  multiplans: String
  note: String
  phonenumber: String
  photoURL: String
  place: String
  price: Float
  rating: Int
  ratingCount: Int
  tagline: String
  title: String
  twitterId: String
  twitterUserId: String
  url: String
  viewCount: Int
  yomigana: String
}

input ServiceUpdateWithWhereUniqueWithoutCategoryInput {
  where: ServiceWhereUniqueInput!
  data: ServiceUpdateWithoutCategoryDataInput!
}

input ServiceUpsertNestedInput {
  update: ServiceUpdateDataInput!
  create: ServiceCreateInput!
}

input ServiceUpsertWithoutReviewsInput {
  update: ServiceUpdateWithoutReviewsDataInput!
  create: ServiceCreateWithoutReviewsInput!
}

input ServiceUpsertWithWhereUniqueWithoutCategoryInput {
  where: ServiceWhereUniqueInput!
  update: ServiceUpdateWithoutCategoryDataInput!
  create: ServiceCreateWithoutCategoryInput!
}

input ServiceWhereInput {
  address: String
  address_not: String
  address_in: [String!]
  address_not_in: [String!]
  address_lt: String
  address_lte: String
  address_gt: String
  address_gte: String
  address_contains: String
  address_not_contains: String
  address_starts_with: String
  address_not_starts_with: String
  address_ends_with: String
  address_not_ends_with: String
  category: CategoryWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  freetrial: String
  freetrial_not: String
  freetrial_in: [String!]
  freetrial_not_in: [String!]
  freetrial_lt: String
  freetrial_lte: String
  freetrial_gt: String
  freetrial_gte: String
  freetrial_contains: String
  freetrial_not_contains: String
  freetrial_starts_with: String
  freetrial_not_starts_with: String
  freetrial_ends_with: String
  freetrial_not_ends_with: String
  hashtag: String
  hashtag_not: String
  hashtag_in: [String!]
  hashtag_not_in: [String!]
  hashtag_lt: String
  hashtag_lte: String
  hashtag_gt: String
  hashtag_gte: String
  hashtag_contains: String
  hashtag_not_contains: String
  hashtag_starts_with: String
  hashtag_not_starts_with: String
  hashtag_ends_with: String
  hashtag_not_ends_with: String
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  inquiry: String
  inquiry_not: String
  inquiry_in: [String!]
  inquiry_not_in: [String!]
  inquiry_lt: String
  inquiry_lte: String
  inquiry_gt: String
  inquiry_gte: String
  inquiry_contains: String
  inquiry_not_contains: String
  inquiry_starts_with: String
  inquiry_not_starts_with: String
  inquiry_ends_with: String
  inquiry_not_ends_with: String
  isOnline: Boolean
  isOnline_not: Boolean
  likeCount: Int
  likeCount_not: Int
  likeCount_in: [Int!]
  likeCount_not_in: [Int!]
  likeCount_lt: Int
  likeCount_lte: Int
  likeCount_gt: Int
  likeCount_gte: Int
  multiplans: String
  multiplans_not: String
  multiplans_in: [String!]
  multiplans_not_in: [String!]
  multiplans_lt: String
  multiplans_lte: String
  multiplans_gt: String
  multiplans_gte: String
  multiplans_contains: String
  multiplans_not_contains: String
  multiplans_starts_with: String
  multiplans_not_starts_with: String
  multiplans_ends_with: String
  multiplans_not_ends_with: String
  note: String
  note_not: String
  note_in: [String!]
  note_not_in: [String!]
  note_lt: String
  note_lte: String
  note_gt: String
  note_gte: String
  note_contains: String
  note_not_contains: String
  note_starts_with: String
  note_not_starts_with: String
  note_ends_with: String
  note_not_ends_with: String
  phonenumber: String
  phonenumber_not: String
  phonenumber_in: [String!]
  phonenumber_not_in: [String!]
  phonenumber_lt: String
  phonenumber_lte: String
  phonenumber_gt: String
  phonenumber_gte: String
  phonenumber_contains: String
  phonenumber_not_contains: String
  phonenumber_starts_with: String
  phonenumber_not_starts_with: String
  phonenumber_ends_with: String
  phonenumber_not_ends_with: String
  photoURL: String
  photoURL_not: String
  photoURL_in: [String!]
  photoURL_not_in: [String!]
  photoURL_lt: String
  photoURL_lte: String
  photoURL_gt: String
  photoURL_gte: String
  photoURL_contains: String
  photoURL_not_contains: String
  photoURL_starts_with: String
  photoURL_not_starts_with: String
  photoURL_ends_with: String
  photoURL_not_ends_with: String
  place: String
  place_not: String
  place_in: [String!]
  place_not_in: [String!]
  place_lt: String
  place_lte: String
  place_gt: String
  place_gte: String
  place_contains: String
  place_not_contains: String
  place_starts_with: String
  place_not_starts_with: String
  place_ends_with: String
  place_not_ends_with: String
  price: Float
  price_not: Float
  price_in: [Float!]
  price_not_in: [Float!]
  price_lt: Float
  price_lte: Float
  price_gt: Float
  price_gte: Float
  rating: Int
  rating_not: Int
  rating_in: [Int!]
  rating_not_in: [Int!]
  rating_lt: Int
  rating_lte: Int
  rating_gt: Int
  rating_gte: Int
  ratingCount: Int
  ratingCount_not: Int
  ratingCount_in: [Int!]
  ratingCount_not_in: [Int!]
  ratingCount_lt: Int
  ratingCount_lte: Int
  ratingCount_gt: Int
  ratingCount_gte: Int
  reviews_every: ReviewWhereInput
  reviews_some: ReviewWhereInput
  reviews_none: ReviewWhereInput
  tagline: String
  tagline_not: String
  tagline_in: [String!]
  tagline_not_in: [String!]
  tagline_lt: String
  tagline_lte: String
  tagline_gt: String
  tagline_gte: String
  tagline_contains: String
  tagline_not_contains: String
  tagline_starts_with: String
  tagline_not_starts_with: String
  tagline_ends_with: String
  tagline_not_ends_with: String
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  twitterId: String
  twitterId_not: String
  twitterId_in: [String!]
  twitterId_not_in: [String!]
  twitterId_lt: String
  twitterId_lte: String
  twitterId_gt: String
  twitterId_gte: String
  twitterId_contains: String
  twitterId_not_contains: String
  twitterId_starts_with: String
  twitterId_not_starts_with: String
  twitterId_ends_with: String
  twitterId_not_ends_with: String
  twitterUserId: String
  twitterUserId_not: String
  twitterUserId_in: [String!]
  twitterUserId_not_in: [String!]
  twitterUserId_lt: String
  twitterUserId_lte: String
  twitterUserId_gt: String
  twitterUserId_gte: String
  twitterUserId_contains: String
  twitterUserId_not_contains: String
  twitterUserId_starts_with: String
  twitterUserId_not_starts_with: String
  twitterUserId_ends_with: String
  twitterUserId_not_ends_with: String
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  url: String
  url_not: String
  url_in: [String!]
  url_not_in: [String!]
  url_lt: String
  url_lte: String
  url_gt: String
  url_gte: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  viewCount: Int
  viewCount_not: Int
  viewCount_in: [Int!]
  viewCount_not_in: [Int!]
  viewCount_lt: Int
  viewCount_lte: Int
  viewCount_gt: Int
  viewCount_gte: Int
  yomigana: String
  yomigana_not: String
  yomigana_in: [String!]
  yomigana_not_in: [String!]
  yomigana_lt: String
  yomigana_lte: String
  yomigana_gt: String
  yomigana_gte: String
  yomigana_contains: String
  yomigana_not_contains: String
  yomigana_starts_with: String
  yomigana_not_starts_with: String
  yomigana_ends_with: String
  yomigana_not_ends_with: String
  AND: [ServiceWhereInput!]
  OR: [ServiceWhereInput!]
  NOT: [ServiceWhereInput!]
}

input ServiceWhereUniqueInput {
  id: ID
}

type Subscription {
  category(where: CategorySubscriptionWhereInput): CategorySubscriptionPayload
  comment(where: CommentSubscriptionWhereInput): CommentSubscriptionPayload
  link(where: LinkSubscriptionWhereInput): LinkSubscriptionPayload
  review(where: ReviewSubscriptionWhereInput): ReviewSubscriptionPayload
  service(where: ServiceSubscriptionWhereInput): ServiceSubscriptionPayload
}
