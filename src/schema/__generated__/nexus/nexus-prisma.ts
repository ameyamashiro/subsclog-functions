/**
 * This file was automatically generated by nexus-prisma@0.3.5
 * Do not make changes to this file directly
 */

import { core } from 'nexus'
import { GraphQLResolveInfo } from 'graphql'
import * as prisma from '../prisma'

declare global {
  interface NexusPrismaGen extends NexusPrismaTypes {}
}

export interface NexusPrismaTypes {
  objectTypes: {
    fields: {
      Query: QueryObject
      Comment: CommentObject
      Service: ServiceObject
      Category: CategoryObject
      Review: ReviewObject
      CommentConnection: CommentConnectionObject
      PageInfo: PageInfoObject
      CommentEdge: CommentEdgeObject
      AggregateComment: AggregateCommentObject
      ReviewConnection: ReviewConnectionObject
      ReviewEdge: ReviewEdgeObject
      AggregateReview: AggregateReviewObject
      CategoryConnection: CategoryConnectionObject
      CategoryEdge: CategoryEdgeObject
      AggregateCategory: AggregateCategoryObject
      ServiceConnection: ServiceConnectionObject
      ServiceEdge: ServiceEdgeObject
      AggregateService: AggregateServiceObject
      Mutation: MutationObject
      BatchPayload: BatchPayloadObject
      Subscription: SubscriptionObject
      CommentSubscriptionPayload: CommentSubscriptionPayloadObject
      CommentPreviousValues: CommentPreviousValuesObject
      ReviewSubscriptionPayload: ReviewSubscriptionPayloadObject
      ReviewPreviousValues: ReviewPreviousValuesObject
      CategorySubscriptionPayload: CategorySubscriptionPayloadObject
      CategoryPreviousValues: CategoryPreviousValuesObject
      ServiceSubscriptionPayload: ServiceSubscriptionPayloadObject
      ServicePreviousValues: ServicePreviousValuesObject
    }
    fieldsDetails: {
      Query: QueryFieldDetails
      Comment: CommentFieldDetails
      Service: ServiceFieldDetails
      Category: CategoryFieldDetails
      Review: ReviewFieldDetails
      CommentConnection: CommentConnectionFieldDetails
      PageInfo: PageInfoFieldDetails
      CommentEdge: CommentEdgeFieldDetails
      AggregateComment: AggregateCommentFieldDetails
      ReviewConnection: ReviewConnectionFieldDetails
      ReviewEdge: ReviewEdgeFieldDetails
      AggregateReview: AggregateReviewFieldDetails
      CategoryConnection: CategoryConnectionFieldDetails
      CategoryEdge: CategoryEdgeFieldDetails
      AggregateCategory: AggregateCategoryFieldDetails
      ServiceConnection: ServiceConnectionFieldDetails
      ServiceEdge: ServiceEdgeFieldDetails
      AggregateService: AggregateServiceFieldDetails
      Mutation: MutationFieldDetails
      BatchPayload: BatchPayloadFieldDetails
      Subscription: SubscriptionFieldDetails
      CommentSubscriptionPayload: CommentSubscriptionPayloadFieldDetails
      CommentPreviousValues: CommentPreviousValuesFieldDetails
      ReviewSubscriptionPayload: ReviewSubscriptionPayloadFieldDetails
      ReviewPreviousValues: ReviewPreviousValuesFieldDetails
      CategorySubscriptionPayload: CategorySubscriptionPayloadFieldDetails
      CategoryPreviousValues: CategoryPreviousValuesFieldDetails
      ServiceSubscriptionPayload: ServiceSubscriptionPayloadFieldDetails
      ServicePreviousValues: ServicePreviousValuesFieldDetails
    }
  }
  inputTypes: {
    fields: {
      CommentWhereUniqueInput: CommentWhereUniqueInputInputObject
      ServiceWhereInput: ServiceWhereInputInputObject
      CategoryWhereInput: CategoryWhereInputInputObject
      ReviewWhereInput: ReviewWhereInputInputObject
      CommentWhereInput: CommentWhereInputInputObject
      ReviewWhereUniqueInput: ReviewWhereUniqueInputInputObject
      CategoryWhereUniqueInput: CategoryWhereUniqueInputInputObject
      ServiceWhereUniqueInput: ServiceWhereUniqueInputInputObject
      CommentCreateInput: CommentCreateInputInputObject
      ServiceCreateOneInput: ServiceCreateOneInputInputObject
      ServiceCreateInput: ServiceCreateInputInputObject
      CategoryCreateOneWithoutServicesInput: CategoryCreateOneWithoutServicesInputInputObject
      CategoryCreateWithoutServicesInput: CategoryCreateWithoutServicesInputInputObject
      ReviewCreateManyWithoutServiceInput: ReviewCreateManyWithoutServiceInputInputObject
      ReviewCreateWithoutServiceInput: ReviewCreateWithoutServiceInputInputObject
      CommentUpdateInput: CommentUpdateInputInputObject
      ServiceUpdateOneRequiredInput: ServiceUpdateOneRequiredInputInputObject
      ServiceUpdateDataInput: ServiceUpdateDataInputInputObject
      CategoryUpdateOneWithoutServicesInput: CategoryUpdateOneWithoutServicesInputInputObject
      CategoryUpdateWithoutServicesDataInput: CategoryUpdateWithoutServicesDataInputInputObject
      CategoryUpsertWithoutServicesInput: CategoryUpsertWithoutServicesInputInputObject
      ReviewUpdateManyWithoutServiceInput: ReviewUpdateManyWithoutServiceInputInputObject
      ReviewUpdateWithWhereUniqueWithoutServiceInput: ReviewUpdateWithWhereUniqueWithoutServiceInputInputObject
      ReviewUpdateWithoutServiceDataInput: ReviewUpdateWithoutServiceDataInputInputObject
      ReviewUpsertWithWhereUniqueWithoutServiceInput: ReviewUpsertWithWhereUniqueWithoutServiceInputInputObject
      ReviewScalarWhereInput: ReviewScalarWhereInputInputObject
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInputInputObject
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInputInputObject
      ServiceUpsertNestedInput: ServiceUpsertNestedInputInputObject
      CommentUpdateManyMutationInput: CommentUpdateManyMutationInputInputObject
      ReviewCreateInput: ReviewCreateInputInputObject
      ServiceCreateOneWithoutReviewsInput: ServiceCreateOneWithoutReviewsInputInputObject
      ServiceCreateWithoutReviewsInput: ServiceCreateWithoutReviewsInputInputObject
      ReviewUpdateInput: ReviewUpdateInputInputObject
      ServiceUpdateOneRequiredWithoutReviewsInput: ServiceUpdateOneRequiredWithoutReviewsInputInputObject
      ServiceUpdateWithoutReviewsDataInput: ServiceUpdateWithoutReviewsDataInputInputObject
      ServiceUpsertWithoutReviewsInput: ServiceUpsertWithoutReviewsInputInputObject
      ReviewUpdateManyMutationInput: ReviewUpdateManyMutationInputInputObject
      CategoryCreateInput: CategoryCreateInputInputObject
      ServiceCreateManyWithoutCategoryInput: ServiceCreateManyWithoutCategoryInputInputObject
      ServiceCreateWithoutCategoryInput: ServiceCreateWithoutCategoryInputInputObject
      CategoryUpdateInput: CategoryUpdateInputInputObject
      ServiceUpdateManyWithoutCategoryInput: ServiceUpdateManyWithoutCategoryInputInputObject
      ServiceUpdateWithWhereUniqueWithoutCategoryInput: ServiceUpdateWithWhereUniqueWithoutCategoryInputInputObject
      ServiceUpdateWithoutCategoryDataInput: ServiceUpdateWithoutCategoryDataInputInputObject
      ServiceUpsertWithWhereUniqueWithoutCategoryInput: ServiceUpsertWithWhereUniqueWithoutCategoryInputInputObject
      ServiceScalarWhereInput: ServiceScalarWhereInputInputObject
      ServiceUpdateManyWithWhereNestedInput: ServiceUpdateManyWithWhereNestedInputInputObject
      ServiceUpdateManyDataInput: ServiceUpdateManyDataInputInputObject
      CategoryUpdateManyMutationInput: CategoryUpdateManyMutationInputInputObject
      ServiceUpdateInput: ServiceUpdateInputInputObject
      ServiceUpdateManyMutationInput: ServiceUpdateManyMutationInputInputObject
      CommentSubscriptionWhereInput: CommentSubscriptionWhereInputInputObject
      ReviewSubscriptionWhereInput: ReviewSubscriptionWhereInputInputObject
      CategorySubscriptionWhereInput: CategorySubscriptionWhereInputInputObject
      ServiceSubscriptionWhereInput: ServiceSubscriptionWhereInputInputObject
    }
  }
  enumTypes: {
    ServiceOrderByInput: ServiceOrderByInputValues
    ReviewOrderByInput: ReviewOrderByInputValues
    CommentOrderByInput: CommentOrderByInputValues
    CategoryOrderByInput: CategoryOrderByInputValues
    MutationType: MutationTypeValues
  }
}

// Types for Query

type QueryObject =
  | QueryFields
  | { name: 'comment'; args?: QueryCommentArgs[] | false; alias?: string }
  | { name: 'comments'; args?: QueryCommentsArgs[] | false; alias?: string }
  | {
      name: 'commentsConnection'
      args?: QueryCommentsConnectionArgs[] | false
      alias?: string
    }
  | { name: 'review'; args?: QueryReviewArgs[] | false; alias?: string }
  | { name: 'reviews'; args?: QueryReviewsArgs[] | false; alias?: string }
  | {
      name: 'reviewsConnection'
      args?: QueryReviewsConnectionArgs[] | false
      alias?: string
    }
  | { name: 'category'; args?: QueryCategoryArgs[] | false; alias?: string }
  | { name: 'categories'; args?: QueryCategoriesArgs[] | false; alias?: string }
  | {
      name: 'categoriesConnection'
      args?: QueryCategoriesConnectionArgs[] | false
      alias?: string
    }
  | { name: 'service'; args?: QueryServiceArgs[] | false; alias?: string }
  | { name: 'services'; args?: QueryServicesArgs[] | false; alias?: string }
  | {
      name: 'servicesConnection'
      args?: QueryServicesConnectionArgs[] | false
      alias?: string
    }

type QueryFields =
  | 'comment'
  | 'comments'
  | 'commentsConnection'
  | 'review'
  | 'reviews'
  | 'reviewsConnection'
  | 'category'
  | 'categories'
  | 'categoriesConnection'
  | 'service'
  | 'services'
  | 'servicesConnection'

type QueryCommentArgs = 'where'
type QueryCommentsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryCommentsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryReviewArgs = 'where'
type QueryReviewsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryReviewsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryCategoryArgs = 'where'
type QueryCategoriesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryCategoriesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryServiceArgs = 'where'
type QueryServicesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryServicesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'

export interface QueryFieldDetails {
  comment: {
    type: 'Comment'
    args: Record<QueryCommentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<'Query'>,
      args: { where: CommentWhereUniqueInput },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Comment | null> | prisma.Comment | null
  }
  comments: {
    type: 'Comment'
    args: Record<QueryCommentsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<'Query'>,
      args: {
        where?: CommentWhereInput | null
        orderBy?: prisma.CommentOrderByInput | null
        skip?: number | null
        after?: string | null
        before?: string | null
        first?: number | null
        last?: number | null
      },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Comment[]> | prisma.Comment[]
  }
  commentsConnection: {
    type: 'CommentConnection'
    args: Record<QueryCommentsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'Query'>,
      args: {
        where?: CommentWhereInput | null
        orderBy?: prisma.CommentOrderByInput | null
        skip?: number | null
        after?: string | null
        before?: string | null
        first?: number | null
        last?: number | null
      },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CommentConnection> | prisma.CommentConnection
  }
  review: {
    type: 'Review'
    args: Record<QueryReviewArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<'Query'>,
      args: { where: ReviewWhereUniqueInput },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review | null> | prisma.Review | null
  }
  reviews: {
    type: 'Review'
    args: Record<QueryReviewsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<'Query'>,
      args: {
        where?: ReviewWhereInput | null
        orderBy?: prisma.ReviewOrderByInput | null
        skip?: number | null
        after?: string | null
        before?: string | null
        first?: number | null
        last?: number | null
      },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review[]> | prisma.Review[]
  }
  reviewsConnection: {
    type: 'ReviewConnection'
    args: Record<QueryReviewsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'Query'>,
      args: {
        where?: ReviewWhereInput | null
        orderBy?: prisma.ReviewOrderByInput | null
        skip?: number | null
        after?: string | null
        before?: string | null
        first?: number | null
        last?: number | null
      },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ReviewConnection> | prisma.ReviewConnection
  }
  category: {
    type: 'Category'
    args: Record<QueryCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<'Query'>,
      args: { where: CategoryWhereUniqueInput },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Category | null> | prisma.Category | null
  }
  categories: {
    type: 'Category'
    args: Record<QueryCategoriesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<'Query'>,
      args: {
        where?: CategoryWhereInput | null
        orderBy?: prisma.CategoryOrderByInput | null
        skip?: number | null
        after?: string | null
        before?: string | null
        first?: number | null
        last?: number | null
      },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Category[]> | prisma.Category[]
  }
  categoriesConnection: {
    type: 'CategoryConnection'
    args: Record<QueryCategoriesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'Query'>,
      args: {
        where?: CategoryWhereInput | null
        orderBy?: prisma.CategoryOrderByInput | null
        skip?: number | null
        after?: string | null
        before?: string | null
        first?: number | null
        last?: number | null
      },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CategoryConnection> | prisma.CategoryConnection
  }
  service: {
    type: 'Service'
    args: Record<QueryServiceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<'Query'>,
      args: { where: ServiceWhereUniqueInput },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Service | null> | prisma.Service | null
  }
  services: {
    type: 'Service'
    args: Record<QueryServicesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<'Query'>,
      args: {
        where?: ServiceWhereInput | null
        orderBy?: prisma.ServiceOrderByInput | null
        skip?: number | null
        after?: string | null
        before?: string | null
        first?: number | null
        last?: number | null
      },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Service[]> | prisma.Service[]
  }
  servicesConnection: {
    type: 'ServiceConnection'
    args: Record<QueryServicesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'Query'>,
      args: {
        where?: ServiceWhereInput | null
        orderBy?: prisma.ServiceOrderByInput | null
        skip?: number | null
        after?: string | null
        before?: string | null
        first?: number | null
        last?: number | null
      },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ServiceConnection> | prisma.ServiceConnection
  }
}

// Types for Comment

type CommentObject =
  | CommentFields
  | { name: 'id'; args?: [] | false; alias?: string }
  | { name: 'createdAt'; args?: [] | false; alias?: string }
  | { name: 'updatedAt'; args?: [] | false; alias?: string }
  | { name: 'text'; args?: [] | false; alias?: string }
  | { name: 'service'; args?: [] | false; alias?: string }
  | { name: 'ownerId'; args?: [] | false; alias?: string }

type CommentFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'text'
  | 'service'
  | 'ownerId'

export interface CommentFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  text: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  service: {
    type: 'Service'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'Comment'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Service> | prisma.Service
  }
  ownerId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}

// Types for Service

type ServiceObject =
  | ServiceFields
  | { name: 'address'; args?: [] | false; alias?: string }
  | { name: 'category'; args?: [] | false; alias?: string }
  | { name: 'createdAt'; args?: [] | false; alias?: string }
  | { name: 'description'; args?: [] | false; alias?: string }
  | { name: 'freetrial'; args?: [] | false; alias?: string }
  | { name: 'id'; args?: [] | false; alias?: string }
  | { name: 'isOnline'; args?: [] | false; alias?: string }
  | { name: 'inquiry'; args?: [] | false; alias?: string }
  | { name: 'likeCount'; args?: [] | false; alias?: string }
  | { name: 'multiplans'; args?: [] | false; alias?: string }
  | { name: 'note'; args?: [] | false; alias?: string }
  | { name: 'phonenumber'; args?: [] | false; alias?: string }
  | { name: 'photoURL'; args?: [] | false; alias?: string }
  | { name: 'place'; args?: [] | false; alias?: string }
  | { name: 'price'; args?: [] | false; alias?: string }
  | { name: 'rating'; args?: [] | false; alias?: string }
  | { name: 'ratingCount'; args?: [] | false; alias?: string }
  | { name: 'reviews'; args?: ServiceReviewsArgs[] | false; alias?: string }
  | { name: 'tagline'; args?: [] | false; alias?: string }
  | { name: 'title'; args?: [] | false; alias?: string }
  | { name: 'updatedAt'; args?: [] | false; alias?: string }
  | { name: 'url'; args?: [] | false; alias?: string }
  | { name: 'viewCount'; args?: [] | false; alias?: string }
  | { name: 'yomigana'; args?: [] | false; alias?: string }

type ServiceFields =
  | 'address'
  | 'category'
  | 'createdAt'
  | 'description'
  | 'freetrial'
  | 'id'
  | 'isOnline'
  | 'inquiry'
  | 'likeCount'
  | 'multiplans'
  | 'note'
  | 'phonenumber'
  | 'photoURL'
  | 'place'
  | 'price'
  | 'rating'
  | 'ratingCount'
  | 'reviews'
  | 'tagline'
  | 'title'
  | 'updatedAt'
  | 'url'
  | 'viewCount'
  | 'yomigana'

type ServiceReviewsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'

export interface ServiceFieldDetails {
  address: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  category: {
    type: 'Category'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<'Service'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Category | null> | prisma.Category | null
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  freetrial: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  isOnline: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  inquiry: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  likeCount: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  multiplans: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  note: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  phonenumber: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  photoURL: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  place: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  price: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  rating: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  ratingCount: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  reviews: {
    type: 'Review'
    args: Record<ServiceReviewsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<'Service'>,
      args: {
        where?: ReviewWhereInput | null
        orderBy?: prisma.ReviewOrderByInput | null
        skip?: number | null
        after?: string | null
        before?: string | null
        first?: number | null
        last?: number | null
      },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review[]> | prisma.Review[]
  }
  tagline: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  title: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  viewCount: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  yomigana: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}

// Types for Category

type CategoryObject =
  | CategoryFields
  | { name: 'id'; args?: [] | false; alias?: string }
  | { name: 'createdAt'; args?: [] | false; alias?: string }
  | { name: 'updatedAt'; args?: [] | false; alias?: string }
  | { name: 'name'; args?: [] | false; alias?: string }
  | { name: 'services'; args?: CategoryServicesArgs[] | false; alias?: string }
  | { name: 'shortDescription'; args?: [] | false; alias?: string }
  | { name: 'description'; args?: [] | false; alias?: string }

type CategoryFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'name'
  | 'services'
  | 'shortDescription'
  | 'description'

type CategoryServicesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'

export interface CategoryFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  services: {
    type: 'Service'
    args: Record<CategoryServicesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<'Category'>,
      args: {
        where?: ServiceWhereInput | null
        orderBy?: prisma.ServiceOrderByInput | null
        skip?: number | null
        after?: string | null
        before?: string | null
        first?: number | null
        last?: number | null
      },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Service[]> | prisma.Service[]
  }
  shortDescription: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}

// Types for Review

type ReviewObject =
  | ReviewFields
  | { name: 'id'; args?: [] | false; alias?: string }
  | { name: 'createdAt'; args?: [] | false; alias?: string }
  | { name: 'updatedAt'; args?: [] | false; alias?: string }
  | { name: 'rate'; args?: [] | false; alias?: string }
  | { name: 'rating'; args?: [] | false; alias?: string }
  | { name: 'text'; args?: [] | false; alias?: string }
  | { name: 'serviceId'; args?: [] | false; alias?: string }
  | { name: 'service'; args?: [] | false; alias?: string }
  | { name: 'ownerId'; args?: [] | false; alias?: string }

type ReviewFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'rate'
  | 'rating'
  | 'text'
  | 'serviceId'
  | 'service'
  | 'ownerId'

export interface ReviewFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  rate: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  rating: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  text: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  serviceId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  service: {
    type: 'Service'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'Review'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Service> | prisma.Service
  }
  ownerId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}

// Types for CommentConnection

type CommentConnectionObject =
  | CommentConnectionFields
  | { name: 'pageInfo'; args?: [] | false; alias?: string }
  | { name: 'edges'; args?: [] | false; alias?: string }
  | { name: 'aggregate'; args?: [] | false; alias?: string }

type CommentConnectionFields = 'pageInfo' | 'edges' | 'aggregate'

export interface CommentConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'CommentConnection'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'CommentEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<'CommentConnection'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CommentEdge[]> | prisma.CommentEdge[]
  }
  aggregate: {
    type: 'AggregateComment'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'CommentConnection'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateComment> | prisma.AggregateComment
  }
}

// Types for PageInfo

type PageInfoObject =
  | PageInfoFields
  | { name: 'hasNextPage'; args?: [] | false; alias?: string }
  | { name: 'hasPreviousPage'; args?: [] | false; alias?: string }
  | { name: 'startCursor'; args?: [] | false; alias?: string }
  | { name: 'endCursor'; args?: [] | false; alias?: string }

type PageInfoFields =
  | 'hasNextPage'
  | 'hasPreviousPage'
  | 'startCursor'
  | 'endCursor'

export interface PageInfoFieldDetails {
  hasNextPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hasPreviousPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  startCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  endCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}

// Types for CommentEdge

type CommentEdgeObject =
  | CommentEdgeFields
  | { name: 'node'; args?: [] | false; alias?: string }
  | { name: 'cursor'; args?: [] | false; alias?: string }

type CommentEdgeFields = 'node' | 'cursor'

export interface CommentEdgeFieldDetails {
  node: {
    type: 'Comment'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'CommentEdge'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Comment> | prisma.Comment
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}

// Types for AggregateComment

type AggregateCommentObject =
  | AggregateCommentFields
  | { name: 'count'; args?: [] | false; alias?: string }

type AggregateCommentFields = 'count'

export interface AggregateCommentFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}

// Types for ReviewConnection

type ReviewConnectionObject =
  | ReviewConnectionFields
  | { name: 'pageInfo'; args?: [] | false; alias?: string }
  | { name: 'edges'; args?: [] | false; alias?: string }
  | { name: 'aggregate'; args?: [] | false; alias?: string }

type ReviewConnectionFields = 'pageInfo' | 'edges' | 'aggregate'

export interface ReviewConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'ReviewConnection'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'ReviewEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<'ReviewConnection'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ReviewEdge[]> | prisma.ReviewEdge[]
  }
  aggregate: {
    type: 'AggregateReview'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'ReviewConnection'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateReview> | prisma.AggregateReview
  }
}

// Types for ReviewEdge

type ReviewEdgeObject =
  | ReviewEdgeFields
  | { name: 'node'; args?: [] | false; alias?: string }
  | { name: 'cursor'; args?: [] | false; alias?: string }

type ReviewEdgeFields = 'node' | 'cursor'

export interface ReviewEdgeFieldDetails {
  node: {
    type: 'Review'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'ReviewEdge'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review> | prisma.Review
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}

// Types for AggregateReview

type AggregateReviewObject =
  | AggregateReviewFields
  | { name: 'count'; args?: [] | false; alias?: string }

type AggregateReviewFields = 'count'

export interface AggregateReviewFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}

// Types for CategoryConnection

type CategoryConnectionObject =
  | CategoryConnectionFields
  | { name: 'pageInfo'; args?: [] | false; alias?: string }
  | { name: 'edges'; args?: [] | false; alias?: string }
  | { name: 'aggregate'; args?: [] | false; alias?: string }

type CategoryConnectionFields = 'pageInfo' | 'edges' | 'aggregate'

export interface CategoryConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'CategoryConnection'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'CategoryEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<'CategoryConnection'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CategoryEdge[]> | prisma.CategoryEdge[]
  }
  aggregate: {
    type: 'AggregateCategory'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'CategoryConnection'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateCategory> | prisma.AggregateCategory
  }
}

// Types for CategoryEdge

type CategoryEdgeObject =
  | CategoryEdgeFields
  | { name: 'node'; args?: [] | false; alias?: string }
  | { name: 'cursor'; args?: [] | false; alias?: string }

type CategoryEdgeFields = 'node' | 'cursor'

export interface CategoryEdgeFieldDetails {
  node: {
    type: 'Category'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'CategoryEdge'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Category> | prisma.Category
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}

// Types for AggregateCategory

type AggregateCategoryObject =
  | AggregateCategoryFields
  | { name: 'count'; args?: [] | false; alias?: string }

type AggregateCategoryFields = 'count'

export interface AggregateCategoryFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}

// Types for ServiceConnection

type ServiceConnectionObject =
  | ServiceConnectionFields
  | { name: 'pageInfo'; args?: [] | false; alias?: string }
  | { name: 'edges'; args?: [] | false; alias?: string }
  | { name: 'aggregate'; args?: [] | false; alias?: string }

type ServiceConnectionFields = 'pageInfo' | 'edges' | 'aggregate'

export interface ServiceConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'ServiceConnection'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'ServiceEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<'ServiceConnection'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ServiceEdge[]> | prisma.ServiceEdge[]
  }
  aggregate: {
    type: 'AggregateService'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'ServiceConnection'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateService> | prisma.AggregateService
  }
}

// Types for ServiceEdge

type ServiceEdgeObject =
  | ServiceEdgeFields
  | { name: 'node'; args?: [] | false; alias?: string }
  | { name: 'cursor'; args?: [] | false; alias?: string }

type ServiceEdgeFields = 'node' | 'cursor'

export interface ServiceEdgeFieldDetails {
  node: {
    type: 'Service'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'ServiceEdge'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Service> | prisma.Service
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}

// Types for AggregateService

type AggregateServiceObject =
  | AggregateServiceFields
  | { name: 'count'; args?: [] | false; alias?: string }

type AggregateServiceFields = 'count'

export interface AggregateServiceFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}

// Types for Mutation

type MutationObject =
  | MutationFields
  | {
      name: 'createComment'
      args?: MutationCreateCommentArgs[] | false
      alias?: string
    }
  | {
      name: 'updateComment'
      args?: MutationUpdateCommentArgs[] | false
      alias?: string
    }
  | {
      name: 'updateManyComments'
      args?: MutationUpdateManyCommentsArgs[] | false
      alias?: string
    }
  | {
      name: 'upsertComment'
      args?: MutationUpsertCommentArgs[] | false
      alias?: string
    }
  | {
      name: 'deleteComment'
      args?: MutationDeleteCommentArgs[] | false
      alias?: string
    }
  | {
      name: 'deleteManyComments'
      args?: MutationDeleteManyCommentsArgs[] | false
      alias?: string
    }
  | {
      name: 'createReview'
      args?: MutationCreateReviewArgs[] | false
      alias?: string
    }
  | {
      name: 'updateReview'
      args?: MutationUpdateReviewArgs[] | false
      alias?: string
    }
  | {
      name: 'updateManyReviews'
      args?: MutationUpdateManyReviewsArgs[] | false
      alias?: string
    }
  | {
      name: 'upsertReview'
      args?: MutationUpsertReviewArgs[] | false
      alias?: string
    }
  | {
      name: 'deleteReview'
      args?: MutationDeleteReviewArgs[] | false
      alias?: string
    }
  | {
      name: 'deleteManyReviews'
      args?: MutationDeleteManyReviewsArgs[] | false
      alias?: string
    }
  | {
      name: 'createCategory'
      args?: MutationCreateCategoryArgs[] | false
      alias?: string
    }
  | {
      name: 'updateCategory'
      args?: MutationUpdateCategoryArgs[] | false
      alias?: string
    }
  | {
      name: 'updateManyCategories'
      args?: MutationUpdateManyCategoriesArgs[] | false
      alias?: string
    }
  | {
      name: 'upsertCategory'
      args?: MutationUpsertCategoryArgs[] | false
      alias?: string
    }
  | {
      name: 'deleteCategory'
      args?: MutationDeleteCategoryArgs[] | false
      alias?: string
    }
  | {
      name: 'deleteManyCategories'
      args?: MutationDeleteManyCategoriesArgs[] | false
      alias?: string
    }
  | {
      name: 'createService'
      args?: MutationCreateServiceArgs[] | false
      alias?: string
    }
  | {
      name: 'updateService'
      args?: MutationUpdateServiceArgs[] | false
      alias?: string
    }
  | {
      name: 'updateManyServices'
      args?: MutationUpdateManyServicesArgs[] | false
      alias?: string
    }
  | {
      name: 'upsertService'
      args?: MutationUpsertServiceArgs[] | false
      alias?: string
    }
  | {
      name: 'deleteService'
      args?: MutationDeleteServiceArgs[] | false
      alias?: string
    }
  | {
      name: 'deleteManyServices'
      args?: MutationDeleteManyServicesArgs[] | false
      alias?: string
    }

type MutationFields =
  | 'createComment'
  | 'updateComment'
  | 'updateManyComments'
  | 'upsertComment'
  | 'deleteComment'
  | 'deleteManyComments'
  | 'createReview'
  | 'updateReview'
  | 'updateManyReviews'
  | 'upsertReview'
  | 'deleteReview'
  | 'deleteManyReviews'
  | 'createCategory'
  | 'updateCategory'
  | 'updateManyCategories'
  | 'upsertCategory'
  | 'deleteCategory'
  | 'deleteManyCategories'
  | 'createService'
  | 'updateService'
  | 'updateManyServices'
  | 'upsertService'
  | 'deleteService'
  | 'deleteManyServices'

type MutationCreateCommentArgs = 'data'
type MutationUpdateCommentArgs = 'data' | 'where'
type MutationUpdateManyCommentsArgs = 'data' | 'where'
type MutationUpsertCommentArgs = 'where' | 'create' | 'update'
type MutationDeleteCommentArgs = 'where'
type MutationDeleteManyCommentsArgs = 'where'
type MutationCreateReviewArgs = 'data'
type MutationUpdateReviewArgs = 'data' | 'where'
type MutationUpdateManyReviewsArgs = 'data' | 'where'
type MutationUpsertReviewArgs = 'where' | 'create' | 'update'
type MutationDeleteReviewArgs = 'where'
type MutationDeleteManyReviewsArgs = 'where'
type MutationCreateCategoryArgs = 'data'
type MutationUpdateCategoryArgs = 'data' | 'where'
type MutationUpdateManyCategoriesArgs = 'data' | 'where'
type MutationUpsertCategoryArgs = 'where' | 'create' | 'update'
type MutationDeleteCategoryArgs = 'where'
type MutationDeleteManyCategoriesArgs = 'where'
type MutationCreateServiceArgs = 'data'
type MutationUpdateServiceArgs = 'data' | 'where'
type MutationUpdateManyServicesArgs = 'data' | 'where'
type MutationUpsertServiceArgs = 'where' | 'create' | 'update'
type MutationDeleteServiceArgs = 'where'
type MutationDeleteManyServicesArgs = 'where'

export interface MutationFieldDetails {
  createComment: {
    type: 'Comment'
    args: Record<MutationCreateCommentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'Mutation'>,
      args: { data: CommentCreateInput },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Comment> | prisma.Comment
  }
  updateComment: {
    type: 'Comment'
    args: Record<MutationUpdateCommentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<'Mutation'>,
      args: { data: CommentUpdateInput; where: CommentWhereUniqueInput },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Comment | null> | prisma.Comment | null
  }
  updateManyComments: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyCommentsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'Mutation'>,
      args: {
        data: CommentUpdateManyMutationInput
        where?: CommentWhereInput | null
      },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertComment: {
    type: 'Comment'
    args: Record<MutationUpsertCommentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'Mutation'>,
      args: {
        where: CommentWhereUniqueInput
        create: CommentCreateInput
        update: CommentUpdateInput
      },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Comment> | prisma.Comment
  }
  deleteComment: {
    type: 'Comment'
    args: Record<MutationDeleteCommentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<'Mutation'>,
      args: { where: CommentWhereUniqueInput },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Comment | null> | prisma.Comment | null
  }
  deleteManyComments: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyCommentsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'Mutation'>,
      args: { where?: CommentWhereInput | null },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createReview: {
    type: 'Review'
    args: Record<MutationCreateReviewArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'Mutation'>,
      args: { data: ReviewCreateInput },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review> | prisma.Review
  }
  updateReview: {
    type: 'Review'
    args: Record<MutationUpdateReviewArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<'Mutation'>,
      args: { data: ReviewUpdateInput; where: ReviewWhereUniqueInput },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review | null> | prisma.Review | null
  }
  updateManyReviews: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyReviewsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'Mutation'>,
      args: {
        data: ReviewUpdateManyMutationInput
        where?: ReviewWhereInput | null
      },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertReview: {
    type: 'Review'
    args: Record<MutationUpsertReviewArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'Mutation'>,
      args: {
        where: ReviewWhereUniqueInput
        create: ReviewCreateInput
        update: ReviewUpdateInput
      },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review> | prisma.Review
  }
  deleteReview: {
    type: 'Review'
    args: Record<MutationDeleteReviewArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<'Mutation'>,
      args: { where: ReviewWhereUniqueInput },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review | null> | prisma.Review | null
  }
  deleteManyReviews: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyReviewsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'Mutation'>,
      args: { where?: ReviewWhereInput | null },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createCategory: {
    type: 'Category'
    args: Record<MutationCreateCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'Mutation'>,
      args: { data: CategoryCreateInput },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Category> | prisma.Category
  }
  updateCategory: {
    type: 'Category'
    args: Record<MutationUpdateCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<'Mutation'>,
      args: { data: CategoryUpdateInput; where: CategoryWhereUniqueInput },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Category | null> | prisma.Category | null
  }
  updateManyCategories: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyCategoriesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'Mutation'>,
      args: {
        data: CategoryUpdateManyMutationInput
        where?: CategoryWhereInput | null
      },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertCategory: {
    type: 'Category'
    args: Record<MutationUpsertCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'Mutation'>,
      args: {
        where: CategoryWhereUniqueInput
        create: CategoryCreateInput
        update: CategoryUpdateInput
      },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Category> | prisma.Category
  }
  deleteCategory: {
    type: 'Category'
    args: Record<MutationDeleteCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<'Mutation'>,
      args: { where: CategoryWhereUniqueInput },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Category | null> | prisma.Category | null
  }
  deleteManyCategories: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyCategoriesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'Mutation'>,
      args: { where?: CategoryWhereInput | null },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createService: {
    type: 'Service'
    args: Record<MutationCreateServiceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'Mutation'>,
      args: { data: ServiceCreateInput },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Service> | prisma.Service
  }
  updateService: {
    type: 'Service'
    args: Record<MutationUpdateServiceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<'Mutation'>,
      args: { data: ServiceUpdateInput; where: ServiceWhereUniqueInput },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Service | null> | prisma.Service | null
  }
  updateManyServices: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyServicesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'Mutation'>,
      args: {
        data: ServiceUpdateManyMutationInput
        where?: ServiceWhereInput | null
      },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertService: {
    type: 'Service'
    args: Record<MutationUpsertServiceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'Mutation'>,
      args: {
        where: ServiceWhereUniqueInput
        create: ServiceCreateInput
        update: ServiceUpdateInput
      },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Service> | prisma.Service
  }
  deleteService: {
    type: 'Service'
    args: Record<MutationDeleteServiceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<'Mutation'>,
      args: { where: ServiceWhereUniqueInput },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Service | null> | prisma.Service | null
  }
  deleteManyServices: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyServicesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'Mutation'>,
      args: { where?: ServiceWhereInput | null },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
}

// Types for BatchPayload

type BatchPayloadObject =
  | BatchPayloadFields
  | { name: 'count'; args?: [] | false; alias?: string }

type BatchPayloadFields = 'count'

export interface BatchPayloadFieldDetails {
  count: {
    type: 'Long'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}

// Types for Subscription

type SubscriptionObject =
  | SubscriptionFields
  | {
      name: 'comment'
      args?: SubscriptionCommentArgs[] | false
      alias?: string
    }
  | { name: 'review'; args?: SubscriptionReviewArgs[] | false; alias?: string }
  | {
      name: 'category'
      args?: SubscriptionCategoryArgs[] | false
      alias?: string
    }
  | {
      name: 'service'
      args?: SubscriptionServiceArgs[] | false
      alias?: string
    }

type SubscriptionFields = 'comment' | 'review' | 'category' | 'service'

type SubscriptionCommentArgs = 'where'
type SubscriptionReviewArgs = 'where'
type SubscriptionCategoryArgs = 'where'
type SubscriptionServiceArgs = 'where'

export interface SubscriptionFieldDetails {
  comment: {
    type: 'CommentSubscriptionPayload'
    args: Record<SubscriptionCommentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<'Subscription'>,
      args: { where?: CommentSubscriptionWhereInput | null },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) =>
      | Promise<prisma.CommentSubscriptionPayload | null>
      | prisma.CommentSubscriptionPayload
      | null
  }
  review: {
    type: 'ReviewSubscriptionPayload'
    args: Record<SubscriptionReviewArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<'Subscription'>,
      args: { where?: ReviewSubscriptionWhereInput | null },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) =>
      | Promise<prisma.ReviewSubscriptionPayload | null>
      | prisma.ReviewSubscriptionPayload
      | null
  }
  category: {
    type: 'CategorySubscriptionPayload'
    args: Record<SubscriptionCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<'Subscription'>,
      args: { where?: CategorySubscriptionWhereInput | null },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) =>
      | Promise<prisma.CategorySubscriptionPayload | null>
      | prisma.CategorySubscriptionPayload
      | null
  }
  service: {
    type: 'ServiceSubscriptionPayload'
    args: Record<SubscriptionServiceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<'Subscription'>,
      args: { where?: ServiceSubscriptionWhereInput | null },
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) =>
      | Promise<prisma.ServiceSubscriptionPayload | null>
      | prisma.ServiceSubscriptionPayload
      | null
  }
}

// Types for CommentSubscriptionPayload

type CommentSubscriptionPayloadObject =
  | CommentSubscriptionPayloadFields
  | { name: 'mutation'; args?: [] | false; alias?: string }
  | { name: 'node'; args?: [] | false; alias?: string }
  | { name: 'updatedFields'; args?: [] | false; alias?: string }
  | { name: 'previousValues'; args?: [] | false; alias?: string }

type CommentSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'

export interface CommentSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'CommentSubscriptionPayload'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Comment'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<'CommentSubscriptionPayload'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Comment | null> | prisma.Comment | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'CommentPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<'CommentSubscriptionPayload'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) =>
      | Promise<prisma.CommentPreviousValues | null>
      | prisma.CommentPreviousValues
      | null
  }
}

// Types for CommentPreviousValues

type CommentPreviousValuesObject =
  | CommentPreviousValuesFields
  | { name: 'id'; args?: [] | false; alias?: string }
  | { name: 'createdAt'; args?: [] | false; alias?: string }
  | { name: 'updatedAt'; args?: [] | false; alias?: string }
  | { name: 'text'; args?: [] | false; alias?: string }
  | { name: 'ownerId'; args?: [] | false; alias?: string }

type CommentPreviousValuesFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'text'
  | 'ownerId'

export interface CommentPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  text: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  ownerId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}

// Types for ReviewSubscriptionPayload

type ReviewSubscriptionPayloadObject =
  | ReviewSubscriptionPayloadFields
  | { name: 'mutation'; args?: [] | false; alias?: string }
  | { name: 'node'; args?: [] | false; alias?: string }
  | { name: 'updatedFields'; args?: [] | false; alias?: string }
  | { name: 'previousValues'; args?: [] | false; alias?: string }

type ReviewSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'

export interface ReviewSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'ReviewSubscriptionPayload'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Review'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<'ReviewSubscriptionPayload'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review | null> | prisma.Review | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'ReviewPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<'ReviewSubscriptionPayload'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) =>
      | Promise<prisma.ReviewPreviousValues | null>
      | prisma.ReviewPreviousValues
      | null
  }
}

// Types for ReviewPreviousValues

type ReviewPreviousValuesObject =
  | ReviewPreviousValuesFields
  | { name: 'id'; args?: [] | false; alias?: string }
  | { name: 'createdAt'; args?: [] | false; alias?: string }
  | { name: 'updatedAt'; args?: [] | false; alias?: string }
  | { name: 'rate'; args?: [] | false; alias?: string }
  | { name: 'rating'; args?: [] | false; alias?: string }
  | { name: 'text'; args?: [] | false; alias?: string }
  | { name: 'serviceId'; args?: [] | false; alias?: string }
  | { name: 'ownerId'; args?: [] | false; alias?: string }

type ReviewPreviousValuesFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'rate'
  | 'rating'
  | 'text'
  | 'serviceId'
  | 'ownerId'

export interface ReviewPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  rate: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  rating: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  text: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  serviceId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  ownerId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}

// Types for CategorySubscriptionPayload

type CategorySubscriptionPayloadObject =
  | CategorySubscriptionPayloadFields
  | { name: 'mutation'; args?: [] | false; alias?: string }
  | { name: 'node'; args?: [] | false; alias?: string }
  | { name: 'updatedFields'; args?: [] | false; alias?: string }
  | { name: 'previousValues'; args?: [] | false; alias?: string }

type CategorySubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'

export interface CategorySubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'CategorySubscriptionPayload'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Category'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<'CategorySubscriptionPayload'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Category | null> | prisma.Category | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'CategoryPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<'CategorySubscriptionPayload'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) =>
      | Promise<prisma.CategoryPreviousValues | null>
      | prisma.CategoryPreviousValues
      | null
  }
}

// Types for CategoryPreviousValues

type CategoryPreviousValuesObject =
  | CategoryPreviousValuesFields
  | { name: 'id'; args?: [] | false; alias?: string }
  | { name: 'createdAt'; args?: [] | false; alias?: string }
  | { name: 'updatedAt'; args?: [] | false; alias?: string }
  | { name: 'name'; args?: [] | false; alias?: string }
  | { name: 'shortDescription'; args?: [] | false; alias?: string }
  | { name: 'description'; args?: [] | false; alias?: string }

type CategoryPreviousValuesFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'name'
  | 'shortDescription'
  | 'description'

export interface CategoryPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  shortDescription: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}

// Types for ServiceSubscriptionPayload

type ServiceSubscriptionPayloadObject =
  | ServiceSubscriptionPayloadFields
  | { name: 'mutation'; args?: [] | false; alias?: string }
  | { name: 'node'; args?: [] | false; alias?: string }
  | { name: 'updatedFields'; args?: [] | false; alias?: string }
  | { name: 'previousValues'; args?: [] | false; alias?: string }

type ServiceSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'

export interface ServiceSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<'ServiceSubscriptionPayload'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Service'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<'ServiceSubscriptionPayload'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Service | null> | prisma.Service | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'ServicePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<'ServiceSubscriptionPayload'>,
      args: {},
      context: core.GetGen<'context'>,
      info?: GraphQLResolveInfo
    ) =>
      | Promise<prisma.ServicePreviousValues | null>
      | prisma.ServicePreviousValues
      | null
  }
}

// Types for ServicePreviousValues

type ServicePreviousValuesObject =
  | ServicePreviousValuesFields
  | { name: 'address'; args?: [] | false; alias?: string }
  | { name: 'createdAt'; args?: [] | false; alias?: string }
  | { name: 'description'; args?: [] | false; alias?: string }
  | { name: 'freetrial'; args?: [] | false; alias?: string }
  | { name: 'id'; args?: [] | false; alias?: string }
  | { name: 'isOnline'; args?: [] | false; alias?: string }
  | { name: 'inquiry'; args?: [] | false; alias?: string }
  | { name: 'likeCount'; args?: [] | false; alias?: string }
  | { name: 'multiplans'; args?: [] | false; alias?: string }
  | { name: 'note'; args?: [] | false; alias?: string }
  | { name: 'phonenumber'; args?: [] | false; alias?: string }
  | { name: 'photoURL'; args?: [] | false; alias?: string }
  | { name: 'place'; args?: [] | false; alias?: string }
  | { name: 'price'; args?: [] | false; alias?: string }
  | { name: 'rating'; args?: [] | false; alias?: string }
  | { name: 'ratingCount'; args?: [] | false; alias?: string }
  | { name: 'tagline'; args?: [] | false; alias?: string }
  | { name: 'title'; args?: [] | false; alias?: string }
  | { name: 'updatedAt'; args?: [] | false; alias?: string }
  | { name: 'url'; args?: [] | false; alias?: string }
  | { name: 'viewCount'; args?: [] | false; alias?: string }
  | { name: 'yomigana'; args?: [] | false; alias?: string }

type ServicePreviousValuesFields =
  | 'address'
  | 'createdAt'
  | 'description'
  | 'freetrial'
  | 'id'
  | 'isOnline'
  | 'inquiry'
  | 'likeCount'
  | 'multiplans'
  | 'note'
  | 'phonenumber'
  | 'photoURL'
  | 'place'
  | 'price'
  | 'rating'
  | 'ratingCount'
  | 'tagline'
  | 'title'
  | 'updatedAt'
  | 'url'
  | 'viewCount'
  | 'yomigana'

export interface ServicePreviousValuesFieldDetails {
  address: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  freetrial: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  isOnline: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  inquiry: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  likeCount: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  multiplans: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  note: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  phonenumber: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  photoURL: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  place: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  price: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  rating: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  ratingCount: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  tagline: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  title: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  viewCount: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  yomigana: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}

export interface CommentWhereUniqueInput {
  id?: string | null
}
export type CommentWhereUniqueInputInputObject =
  | Extract<keyof CommentWhereUniqueInput, string>
  | { name: 'id'; alias?: string }

export interface ServiceWhereInput {
  address?: string | null
  address_not?: string | null
  address_in?: string[]
  address_not_in?: string[]
  address_lt?: string | null
  address_lte?: string | null
  address_gt?: string | null
  address_gte?: string | null
  address_contains?: string | null
  address_not_contains?: string | null
  address_starts_with?: string | null
  address_not_starts_with?: string | null
  address_ends_with?: string | null
  address_not_ends_with?: string | null
  category?: CategoryWhereInput | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  freetrial?: string | null
  freetrial_not?: string | null
  freetrial_in?: string[]
  freetrial_not_in?: string[]
  freetrial_lt?: string | null
  freetrial_lte?: string | null
  freetrial_gt?: string | null
  freetrial_gte?: string | null
  freetrial_contains?: string | null
  freetrial_not_contains?: string | null
  freetrial_starts_with?: string | null
  freetrial_not_starts_with?: string | null
  freetrial_ends_with?: string | null
  freetrial_not_ends_with?: string | null
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  isOnline?: boolean | null
  isOnline_not?: boolean | null
  inquiry?: string | null
  inquiry_not?: string | null
  inquiry_in?: string[]
  inquiry_not_in?: string[]
  inquiry_lt?: string | null
  inquiry_lte?: string | null
  inquiry_gt?: string | null
  inquiry_gte?: string | null
  inquiry_contains?: string | null
  inquiry_not_contains?: string | null
  inquiry_starts_with?: string | null
  inquiry_not_starts_with?: string | null
  inquiry_ends_with?: string | null
  inquiry_not_ends_with?: string | null
  likeCount?: number | null
  likeCount_not?: number | null
  likeCount_in?: number[]
  likeCount_not_in?: number[]
  likeCount_lt?: number | null
  likeCount_lte?: number | null
  likeCount_gt?: number | null
  likeCount_gte?: number | null
  multiplans?: string | null
  multiplans_not?: string | null
  multiplans_in?: string[]
  multiplans_not_in?: string[]
  multiplans_lt?: string | null
  multiplans_lte?: string | null
  multiplans_gt?: string | null
  multiplans_gte?: string | null
  multiplans_contains?: string | null
  multiplans_not_contains?: string | null
  multiplans_starts_with?: string | null
  multiplans_not_starts_with?: string | null
  multiplans_ends_with?: string | null
  multiplans_not_ends_with?: string | null
  note?: string | null
  note_not?: string | null
  note_in?: string[]
  note_not_in?: string[]
  note_lt?: string | null
  note_lte?: string | null
  note_gt?: string | null
  note_gte?: string | null
  note_contains?: string | null
  note_not_contains?: string | null
  note_starts_with?: string | null
  note_not_starts_with?: string | null
  note_ends_with?: string | null
  note_not_ends_with?: string | null
  phonenumber?: string | null
  phonenumber_not?: string | null
  phonenumber_in?: string[]
  phonenumber_not_in?: string[]
  phonenumber_lt?: string | null
  phonenumber_lte?: string | null
  phonenumber_gt?: string | null
  phonenumber_gte?: string | null
  phonenumber_contains?: string | null
  phonenumber_not_contains?: string | null
  phonenumber_starts_with?: string | null
  phonenumber_not_starts_with?: string | null
  phonenumber_ends_with?: string | null
  phonenumber_not_ends_with?: string | null
  photoURL?: string | null
  photoURL_not?: string | null
  photoURL_in?: string[]
  photoURL_not_in?: string[]
  photoURL_lt?: string | null
  photoURL_lte?: string | null
  photoURL_gt?: string | null
  photoURL_gte?: string | null
  photoURL_contains?: string | null
  photoURL_not_contains?: string | null
  photoURL_starts_with?: string | null
  photoURL_not_starts_with?: string | null
  photoURL_ends_with?: string | null
  photoURL_not_ends_with?: string | null
  place?: string | null
  place_not?: string | null
  place_in?: string[]
  place_not_in?: string[]
  place_lt?: string | null
  place_lte?: string | null
  place_gt?: string | null
  place_gte?: string | null
  place_contains?: string | null
  place_not_contains?: string | null
  place_starts_with?: string | null
  place_not_starts_with?: string | null
  place_ends_with?: string | null
  place_not_ends_with?: string | null
  price?: number | null
  price_not?: number | null
  price_in?: number[]
  price_not_in?: number[]
  price_lt?: number | null
  price_lte?: number | null
  price_gt?: number | null
  price_gte?: number | null
  rating?: number | null
  rating_not?: number | null
  rating_in?: number[]
  rating_not_in?: number[]
  rating_lt?: number | null
  rating_lte?: number | null
  rating_gt?: number | null
  rating_gte?: number | null
  ratingCount?: number | null
  ratingCount_not?: number | null
  ratingCount_in?: number[]
  ratingCount_not_in?: number[]
  ratingCount_lt?: number | null
  ratingCount_lte?: number | null
  ratingCount_gt?: number | null
  ratingCount_gte?: number | null
  reviews_every?: ReviewWhereInput | null
  reviews_some?: ReviewWhereInput | null
  reviews_none?: ReviewWhereInput | null
  tagline?: string | null
  tagline_not?: string | null
  tagline_in?: string[]
  tagline_not_in?: string[]
  tagline_lt?: string | null
  tagline_lte?: string | null
  tagline_gt?: string | null
  tagline_gte?: string | null
  tagline_contains?: string | null
  tagline_not_contains?: string | null
  tagline_starts_with?: string | null
  tagline_not_starts_with?: string | null
  tagline_ends_with?: string | null
  tagline_not_ends_with?: string | null
  title?: string | null
  title_not?: string | null
  title_in?: string[]
  title_not_in?: string[]
  title_lt?: string | null
  title_lte?: string | null
  title_gt?: string | null
  title_gte?: string | null
  title_contains?: string | null
  title_not_contains?: string | null
  title_starts_with?: string | null
  title_not_starts_with?: string | null
  title_ends_with?: string | null
  title_not_ends_with?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  url?: string | null
  url_not?: string | null
  url_in?: string[]
  url_not_in?: string[]
  url_lt?: string | null
  url_lte?: string | null
  url_gt?: string | null
  url_gte?: string | null
  url_contains?: string | null
  url_not_contains?: string | null
  url_starts_with?: string | null
  url_not_starts_with?: string | null
  url_ends_with?: string | null
  url_not_ends_with?: string | null
  viewCount?: number | null
  viewCount_not?: number | null
  viewCount_in?: number[]
  viewCount_not_in?: number[]
  viewCount_lt?: number | null
  viewCount_lte?: number | null
  viewCount_gt?: number | null
  viewCount_gte?: number | null
  yomigana?: string | null
  yomigana_not?: string | null
  yomigana_in?: string[]
  yomigana_not_in?: string[]
  yomigana_lt?: string | null
  yomigana_lte?: string | null
  yomigana_gt?: string | null
  yomigana_gte?: string | null
  yomigana_contains?: string | null
  yomigana_not_contains?: string | null
  yomigana_starts_with?: string | null
  yomigana_not_starts_with?: string | null
  yomigana_ends_with?: string | null
  yomigana_not_ends_with?: string | null
  AND?: ServiceWhereInput[]
  OR?: ServiceWhereInput[]
  NOT?: ServiceWhereInput[]
}
export type ServiceWhereInputInputObject =
  | Extract<keyof ServiceWhereInput, string>
  | { name: 'address'; alias?: string }
  | { name: 'address_not'; alias?: string }
  | { name: 'address_in'; alias?: string }
  | { name: 'address_not_in'; alias?: string }
  | { name: 'address_lt'; alias?: string }
  | { name: 'address_lte'; alias?: string }
  | { name: 'address_gt'; alias?: string }
  | { name: 'address_gte'; alias?: string }
  | { name: 'address_contains'; alias?: string }
  | { name: 'address_not_contains'; alias?: string }
  | { name: 'address_starts_with'; alias?: string }
  | { name: 'address_not_starts_with'; alias?: string }
  | { name: 'address_ends_with'; alias?: string }
  | { name: 'address_not_ends_with'; alias?: string }
  | { name: 'category'; alias?: string }
  | { name: 'createdAt'; alias?: string }
  | { name: 'createdAt_not'; alias?: string }
  | { name: 'createdAt_in'; alias?: string }
  | { name: 'createdAt_not_in'; alias?: string }
  | { name: 'createdAt_lt'; alias?: string }
  | { name: 'createdAt_lte'; alias?: string }
  | { name: 'createdAt_gt'; alias?: string }
  | { name: 'createdAt_gte'; alias?: string }
  | { name: 'description'; alias?: string }
  | { name: 'description_not'; alias?: string }
  | { name: 'description_in'; alias?: string }
  | { name: 'description_not_in'; alias?: string }
  | { name: 'description_lt'; alias?: string }
  | { name: 'description_lte'; alias?: string }
  | { name: 'description_gt'; alias?: string }
  | { name: 'description_gte'; alias?: string }
  | { name: 'description_contains'; alias?: string }
  | { name: 'description_not_contains'; alias?: string }
  | { name: 'description_starts_with'; alias?: string }
  | { name: 'description_not_starts_with'; alias?: string }
  | { name: 'description_ends_with'; alias?: string }
  | { name: 'description_not_ends_with'; alias?: string }
  | { name: 'freetrial'; alias?: string }
  | { name: 'freetrial_not'; alias?: string }
  | { name: 'freetrial_in'; alias?: string }
  | { name: 'freetrial_not_in'; alias?: string }
  | { name: 'freetrial_lt'; alias?: string }
  | { name: 'freetrial_lte'; alias?: string }
  | { name: 'freetrial_gt'; alias?: string }
  | { name: 'freetrial_gte'; alias?: string }
  | { name: 'freetrial_contains'; alias?: string }
  | { name: 'freetrial_not_contains'; alias?: string }
  | { name: 'freetrial_starts_with'; alias?: string }
  | { name: 'freetrial_not_starts_with'; alias?: string }
  | { name: 'freetrial_ends_with'; alias?: string }
  | { name: 'freetrial_not_ends_with'; alias?: string }
  | { name: 'id'; alias?: string }
  | { name: 'id_not'; alias?: string }
  | { name: 'id_in'; alias?: string }
  | { name: 'id_not_in'; alias?: string }
  | { name: 'id_lt'; alias?: string }
  | { name: 'id_lte'; alias?: string }
  | { name: 'id_gt'; alias?: string }
  | { name: 'id_gte'; alias?: string }
  | { name: 'id_contains'; alias?: string }
  | { name: 'id_not_contains'; alias?: string }
  | { name: 'id_starts_with'; alias?: string }
  | { name: 'id_not_starts_with'; alias?: string }
  | { name: 'id_ends_with'; alias?: string }
  | { name: 'id_not_ends_with'; alias?: string }
  | { name: 'isOnline'; alias?: string }
  | { name: 'isOnline_not'; alias?: string }
  | { name: 'inquiry'; alias?: string }
  | { name: 'inquiry_not'; alias?: string }
  | { name: 'inquiry_in'; alias?: string }
  | { name: 'inquiry_not_in'; alias?: string }
  | { name: 'inquiry_lt'; alias?: string }
  | { name: 'inquiry_lte'; alias?: string }
  | { name: 'inquiry_gt'; alias?: string }
  | { name: 'inquiry_gte'; alias?: string }
  | { name: 'inquiry_contains'; alias?: string }
  | { name: 'inquiry_not_contains'; alias?: string }
  | { name: 'inquiry_starts_with'; alias?: string }
  | { name: 'inquiry_not_starts_with'; alias?: string }
  | { name: 'inquiry_ends_with'; alias?: string }
  | { name: 'inquiry_not_ends_with'; alias?: string }
  | { name: 'likeCount'; alias?: string }
  | { name: 'likeCount_not'; alias?: string }
  | { name: 'likeCount_in'; alias?: string }
  | { name: 'likeCount_not_in'; alias?: string }
  | { name: 'likeCount_lt'; alias?: string }
  | { name: 'likeCount_lte'; alias?: string }
  | { name: 'likeCount_gt'; alias?: string }
  | { name: 'likeCount_gte'; alias?: string }
  | { name: 'multiplans'; alias?: string }
  | { name: 'multiplans_not'; alias?: string }
  | { name: 'multiplans_in'; alias?: string }
  | { name: 'multiplans_not_in'; alias?: string }
  | { name: 'multiplans_lt'; alias?: string }
  | { name: 'multiplans_lte'; alias?: string }
  | { name: 'multiplans_gt'; alias?: string }
  | { name: 'multiplans_gte'; alias?: string }
  | { name: 'multiplans_contains'; alias?: string }
  | { name: 'multiplans_not_contains'; alias?: string }
  | { name: 'multiplans_starts_with'; alias?: string }
  | { name: 'multiplans_not_starts_with'; alias?: string }
  | { name: 'multiplans_ends_with'; alias?: string }
  | { name: 'multiplans_not_ends_with'; alias?: string }
  | { name: 'note'; alias?: string }
  | { name: 'note_not'; alias?: string }
  | { name: 'note_in'; alias?: string }
  | { name: 'note_not_in'; alias?: string }
  | { name: 'note_lt'; alias?: string }
  | { name: 'note_lte'; alias?: string }
  | { name: 'note_gt'; alias?: string }
  | { name: 'note_gte'; alias?: string }
  | { name: 'note_contains'; alias?: string }
  | { name: 'note_not_contains'; alias?: string }
  | { name: 'note_starts_with'; alias?: string }
  | { name: 'note_not_starts_with'; alias?: string }
  | { name: 'note_ends_with'; alias?: string }
  | { name: 'note_not_ends_with'; alias?: string }
  | { name: 'phonenumber'; alias?: string }
  | { name: 'phonenumber_not'; alias?: string }
  | { name: 'phonenumber_in'; alias?: string }
  | { name: 'phonenumber_not_in'; alias?: string }
  | { name: 'phonenumber_lt'; alias?: string }
  | { name: 'phonenumber_lte'; alias?: string }
  | { name: 'phonenumber_gt'; alias?: string }
  | { name: 'phonenumber_gte'; alias?: string }
  | { name: 'phonenumber_contains'; alias?: string }
  | { name: 'phonenumber_not_contains'; alias?: string }
  | { name: 'phonenumber_starts_with'; alias?: string }
  | { name: 'phonenumber_not_starts_with'; alias?: string }
  | { name: 'phonenumber_ends_with'; alias?: string }
  | { name: 'phonenumber_not_ends_with'; alias?: string }
  | { name: 'photoURL'; alias?: string }
  | { name: 'photoURL_not'; alias?: string }
  | { name: 'photoURL_in'; alias?: string }
  | { name: 'photoURL_not_in'; alias?: string }
  | { name: 'photoURL_lt'; alias?: string }
  | { name: 'photoURL_lte'; alias?: string }
  | { name: 'photoURL_gt'; alias?: string }
  | { name: 'photoURL_gte'; alias?: string }
  | { name: 'photoURL_contains'; alias?: string }
  | { name: 'photoURL_not_contains'; alias?: string }
  | { name: 'photoURL_starts_with'; alias?: string }
  | { name: 'photoURL_not_starts_with'; alias?: string }
  | { name: 'photoURL_ends_with'; alias?: string }
  | { name: 'photoURL_not_ends_with'; alias?: string }
  | { name: 'place'; alias?: string }
  | { name: 'place_not'; alias?: string }
  | { name: 'place_in'; alias?: string }
  | { name: 'place_not_in'; alias?: string }
  | { name: 'place_lt'; alias?: string }
  | { name: 'place_lte'; alias?: string }
  | { name: 'place_gt'; alias?: string }
  | { name: 'place_gte'; alias?: string }
  | { name: 'place_contains'; alias?: string }
  | { name: 'place_not_contains'; alias?: string }
  | { name: 'place_starts_with'; alias?: string }
  | { name: 'place_not_starts_with'; alias?: string }
  | { name: 'place_ends_with'; alias?: string }
  | { name: 'place_not_ends_with'; alias?: string }
  | { name: 'price'; alias?: string }
  | { name: 'price_not'; alias?: string }
  | { name: 'price_in'; alias?: string }
  | { name: 'price_not_in'; alias?: string }
  | { name: 'price_lt'; alias?: string }
  | { name: 'price_lte'; alias?: string }
  | { name: 'price_gt'; alias?: string }
  | { name: 'price_gte'; alias?: string }
  | { name: 'rating'; alias?: string }
  | { name: 'rating_not'; alias?: string }
  | { name: 'rating_in'; alias?: string }
  | { name: 'rating_not_in'; alias?: string }
  | { name: 'rating_lt'; alias?: string }
  | { name: 'rating_lte'; alias?: string }
  | { name: 'rating_gt'; alias?: string }
  | { name: 'rating_gte'; alias?: string }
  | { name: 'ratingCount'; alias?: string }
  | { name: 'ratingCount_not'; alias?: string }
  | { name: 'ratingCount_in'; alias?: string }
  | { name: 'ratingCount_not_in'; alias?: string }
  | { name: 'ratingCount_lt'; alias?: string }
  | { name: 'ratingCount_lte'; alias?: string }
  | { name: 'ratingCount_gt'; alias?: string }
  | { name: 'ratingCount_gte'; alias?: string }
  | { name: 'reviews_every'; alias?: string }
  | { name: 'reviews_some'; alias?: string }
  | { name: 'reviews_none'; alias?: string }
  | { name: 'tagline'; alias?: string }
  | { name: 'tagline_not'; alias?: string }
  | { name: 'tagline_in'; alias?: string }
  | { name: 'tagline_not_in'; alias?: string }
  | { name: 'tagline_lt'; alias?: string }
  | { name: 'tagline_lte'; alias?: string }
  | { name: 'tagline_gt'; alias?: string }
  | { name: 'tagline_gte'; alias?: string }
  | { name: 'tagline_contains'; alias?: string }
  | { name: 'tagline_not_contains'; alias?: string }
  | { name: 'tagline_starts_with'; alias?: string }
  | { name: 'tagline_not_starts_with'; alias?: string }
  | { name: 'tagline_ends_with'; alias?: string }
  | { name: 'tagline_not_ends_with'; alias?: string }
  | { name: 'title'; alias?: string }
  | { name: 'title_not'; alias?: string }
  | { name: 'title_in'; alias?: string }
  | { name: 'title_not_in'; alias?: string }
  | { name: 'title_lt'; alias?: string }
  | { name: 'title_lte'; alias?: string }
  | { name: 'title_gt'; alias?: string }
  | { name: 'title_gte'; alias?: string }
  | { name: 'title_contains'; alias?: string }
  | { name: 'title_not_contains'; alias?: string }
  | { name: 'title_starts_with'; alias?: string }
  | { name: 'title_not_starts_with'; alias?: string }
  | { name: 'title_ends_with'; alias?: string }
  | { name: 'title_not_ends_with'; alias?: string }
  | { name: 'updatedAt'; alias?: string }
  | { name: 'updatedAt_not'; alias?: string }
  | { name: 'updatedAt_in'; alias?: string }
  | { name: 'updatedAt_not_in'; alias?: string }
  | { name: 'updatedAt_lt'; alias?: string }
  | { name: 'updatedAt_lte'; alias?: string }
  | { name: 'updatedAt_gt'; alias?: string }
  | { name: 'updatedAt_gte'; alias?: string }
  | { name: 'url'; alias?: string }
  | { name: 'url_not'; alias?: string }
  | { name: 'url_in'; alias?: string }
  | { name: 'url_not_in'; alias?: string }
  | { name: 'url_lt'; alias?: string }
  | { name: 'url_lte'; alias?: string }
  | { name: 'url_gt'; alias?: string }
  | { name: 'url_gte'; alias?: string }
  | { name: 'url_contains'; alias?: string }
  | { name: 'url_not_contains'; alias?: string }
  | { name: 'url_starts_with'; alias?: string }
  | { name: 'url_not_starts_with'; alias?: string }
  | { name: 'url_ends_with'; alias?: string }
  | { name: 'url_not_ends_with'; alias?: string }
  | { name: 'viewCount'; alias?: string }
  | { name: 'viewCount_not'; alias?: string }
  | { name: 'viewCount_in'; alias?: string }
  | { name: 'viewCount_not_in'; alias?: string }
  | { name: 'viewCount_lt'; alias?: string }
  | { name: 'viewCount_lte'; alias?: string }
  | { name: 'viewCount_gt'; alias?: string }
  | { name: 'viewCount_gte'; alias?: string }
  | { name: 'yomigana'; alias?: string }
  | { name: 'yomigana_not'; alias?: string }
  | { name: 'yomigana_in'; alias?: string }
  | { name: 'yomigana_not_in'; alias?: string }
  | { name: 'yomigana_lt'; alias?: string }
  | { name: 'yomigana_lte'; alias?: string }
  | { name: 'yomigana_gt'; alias?: string }
  | { name: 'yomigana_gte'; alias?: string }
  | { name: 'yomigana_contains'; alias?: string }
  | { name: 'yomigana_not_contains'; alias?: string }
  | { name: 'yomigana_starts_with'; alias?: string }
  | { name: 'yomigana_not_starts_with'; alias?: string }
  | { name: 'yomigana_ends_with'; alias?: string }
  | { name: 'yomigana_not_ends_with'; alias?: string }
  | { name: 'AND'; alias?: string }
  | { name: 'OR'; alias?: string }
  | { name: 'NOT'; alias?: string }

export interface CategoryWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  services_every?: ServiceWhereInput | null
  services_some?: ServiceWhereInput | null
  services_none?: ServiceWhereInput | null
  shortDescription?: string | null
  shortDescription_not?: string | null
  shortDescription_in?: string[]
  shortDescription_not_in?: string[]
  shortDescription_lt?: string | null
  shortDescription_lte?: string | null
  shortDescription_gt?: string | null
  shortDescription_gte?: string | null
  shortDescription_contains?: string | null
  shortDescription_not_contains?: string | null
  shortDescription_starts_with?: string | null
  shortDescription_not_starts_with?: string | null
  shortDescription_ends_with?: string | null
  shortDescription_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  AND?: CategoryWhereInput[]
  OR?: CategoryWhereInput[]
  NOT?: CategoryWhereInput[]
}
export type CategoryWhereInputInputObject =
  | Extract<keyof CategoryWhereInput, string>
  | { name: 'id'; alias?: string }
  | { name: 'id_not'; alias?: string }
  | { name: 'id_in'; alias?: string }
  | { name: 'id_not_in'; alias?: string }
  | { name: 'id_lt'; alias?: string }
  | { name: 'id_lte'; alias?: string }
  | { name: 'id_gt'; alias?: string }
  | { name: 'id_gte'; alias?: string }
  | { name: 'id_contains'; alias?: string }
  | { name: 'id_not_contains'; alias?: string }
  | { name: 'id_starts_with'; alias?: string }
  | { name: 'id_not_starts_with'; alias?: string }
  | { name: 'id_ends_with'; alias?: string }
  | { name: 'id_not_ends_with'; alias?: string }
  | { name: 'createdAt'; alias?: string }
  | { name: 'createdAt_not'; alias?: string }
  | { name: 'createdAt_in'; alias?: string }
  | { name: 'createdAt_not_in'; alias?: string }
  | { name: 'createdAt_lt'; alias?: string }
  | { name: 'createdAt_lte'; alias?: string }
  | { name: 'createdAt_gt'; alias?: string }
  | { name: 'createdAt_gte'; alias?: string }
  | { name: 'updatedAt'; alias?: string }
  | { name: 'updatedAt_not'; alias?: string }
  | { name: 'updatedAt_in'; alias?: string }
  | { name: 'updatedAt_not_in'; alias?: string }
  | { name: 'updatedAt_lt'; alias?: string }
  | { name: 'updatedAt_lte'; alias?: string }
  | { name: 'updatedAt_gt'; alias?: string }
  | { name: 'updatedAt_gte'; alias?: string }
  | { name: 'name'; alias?: string }
  | { name: 'name_not'; alias?: string }
  | { name: 'name_in'; alias?: string }
  | { name: 'name_not_in'; alias?: string }
  | { name: 'name_lt'; alias?: string }
  | { name: 'name_lte'; alias?: string }
  | { name: 'name_gt'; alias?: string }
  | { name: 'name_gte'; alias?: string }
  | { name: 'name_contains'; alias?: string }
  | { name: 'name_not_contains'; alias?: string }
  | { name: 'name_starts_with'; alias?: string }
  | { name: 'name_not_starts_with'; alias?: string }
  | { name: 'name_ends_with'; alias?: string }
  | { name: 'name_not_ends_with'; alias?: string }
  | { name: 'services_every'; alias?: string }
  | { name: 'services_some'; alias?: string }
  | { name: 'services_none'; alias?: string }
  | { name: 'shortDescription'; alias?: string }
  | { name: 'shortDescription_not'; alias?: string }
  | { name: 'shortDescription_in'; alias?: string }
  | { name: 'shortDescription_not_in'; alias?: string }
  | { name: 'shortDescription_lt'; alias?: string }
  | { name: 'shortDescription_lte'; alias?: string }
  | { name: 'shortDescription_gt'; alias?: string }
  | { name: 'shortDescription_gte'; alias?: string }
  | { name: 'shortDescription_contains'; alias?: string }
  | { name: 'shortDescription_not_contains'; alias?: string }
  | { name: 'shortDescription_starts_with'; alias?: string }
  | { name: 'shortDescription_not_starts_with'; alias?: string }
  | { name: 'shortDescription_ends_with'; alias?: string }
  | { name: 'shortDescription_not_ends_with'; alias?: string }
  | { name: 'description'; alias?: string }
  | { name: 'description_not'; alias?: string }
  | { name: 'description_in'; alias?: string }
  | { name: 'description_not_in'; alias?: string }
  | { name: 'description_lt'; alias?: string }
  | { name: 'description_lte'; alias?: string }
  | { name: 'description_gt'; alias?: string }
  | { name: 'description_gte'; alias?: string }
  | { name: 'description_contains'; alias?: string }
  | { name: 'description_not_contains'; alias?: string }
  | { name: 'description_starts_with'; alias?: string }
  | { name: 'description_not_starts_with'; alias?: string }
  | { name: 'description_ends_with'; alias?: string }
  | { name: 'description_not_ends_with'; alias?: string }
  | { name: 'AND'; alias?: string }
  | { name: 'OR'; alias?: string }
  | { name: 'NOT'; alias?: string }

export interface ReviewWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  rate?: number | null
  rate_not?: number | null
  rate_in?: number[]
  rate_not_in?: number[]
  rate_lt?: number | null
  rate_lte?: number | null
  rate_gt?: number | null
  rate_gte?: number | null
  rating?: number | null
  rating_not?: number | null
  rating_in?: number[]
  rating_not_in?: number[]
  rating_lt?: number | null
  rating_lte?: number | null
  rating_gt?: number | null
  rating_gte?: number | null
  text?: string | null
  text_not?: string | null
  text_in?: string[]
  text_not_in?: string[]
  text_lt?: string | null
  text_lte?: string | null
  text_gt?: string | null
  text_gte?: string | null
  text_contains?: string | null
  text_not_contains?: string | null
  text_starts_with?: string | null
  text_not_starts_with?: string | null
  text_ends_with?: string | null
  text_not_ends_with?: string | null
  serviceId?: string | null
  serviceId_not?: string | null
  serviceId_in?: string[]
  serviceId_not_in?: string[]
  serviceId_lt?: string | null
  serviceId_lte?: string | null
  serviceId_gt?: string | null
  serviceId_gte?: string | null
  serviceId_contains?: string | null
  serviceId_not_contains?: string | null
  serviceId_starts_with?: string | null
  serviceId_not_starts_with?: string | null
  serviceId_ends_with?: string | null
  serviceId_not_ends_with?: string | null
  service?: ServiceWhereInput | null
  ownerId?: string | null
  ownerId_not?: string | null
  ownerId_in?: string[]
  ownerId_not_in?: string[]
  ownerId_lt?: string | null
  ownerId_lte?: string | null
  ownerId_gt?: string | null
  ownerId_gte?: string | null
  ownerId_contains?: string | null
  ownerId_not_contains?: string | null
  ownerId_starts_with?: string | null
  ownerId_not_starts_with?: string | null
  ownerId_ends_with?: string | null
  ownerId_not_ends_with?: string | null
  AND?: ReviewWhereInput[]
  OR?: ReviewWhereInput[]
  NOT?: ReviewWhereInput[]
}
export type ReviewWhereInputInputObject =
  | Extract<keyof ReviewWhereInput, string>
  | { name: 'id'; alias?: string }
  | { name: 'id_not'; alias?: string }
  | { name: 'id_in'; alias?: string }
  | { name: 'id_not_in'; alias?: string }
  | { name: 'id_lt'; alias?: string }
  | { name: 'id_lte'; alias?: string }
  | { name: 'id_gt'; alias?: string }
  | { name: 'id_gte'; alias?: string }
  | { name: 'id_contains'; alias?: string }
  | { name: 'id_not_contains'; alias?: string }
  | { name: 'id_starts_with'; alias?: string }
  | { name: 'id_not_starts_with'; alias?: string }
  | { name: 'id_ends_with'; alias?: string }
  | { name: 'id_not_ends_with'; alias?: string }
  | { name: 'createdAt'; alias?: string }
  | { name: 'createdAt_not'; alias?: string }
  | { name: 'createdAt_in'; alias?: string }
  | { name: 'createdAt_not_in'; alias?: string }
  | { name: 'createdAt_lt'; alias?: string }
  | { name: 'createdAt_lte'; alias?: string }
  | { name: 'createdAt_gt'; alias?: string }
  | { name: 'createdAt_gte'; alias?: string }
  | { name: 'updatedAt'; alias?: string }
  | { name: 'updatedAt_not'; alias?: string }
  | { name: 'updatedAt_in'; alias?: string }
  | { name: 'updatedAt_not_in'; alias?: string }
  | { name: 'updatedAt_lt'; alias?: string }
  | { name: 'updatedAt_lte'; alias?: string }
  | { name: 'updatedAt_gt'; alias?: string }
  | { name: 'updatedAt_gte'; alias?: string }
  | { name: 'rate'; alias?: string }
  | { name: 'rate_not'; alias?: string }
  | { name: 'rate_in'; alias?: string }
  | { name: 'rate_not_in'; alias?: string }
  | { name: 'rate_lt'; alias?: string }
  | { name: 'rate_lte'; alias?: string }
  | { name: 'rate_gt'; alias?: string }
  | { name: 'rate_gte'; alias?: string }
  | { name: 'rating'; alias?: string }
  | { name: 'rating_not'; alias?: string }
  | { name: 'rating_in'; alias?: string }
  | { name: 'rating_not_in'; alias?: string }
  | { name: 'rating_lt'; alias?: string }
  | { name: 'rating_lte'; alias?: string }
  | { name: 'rating_gt'; alias?: string }
  | { name: 'rating_gte'; alias?: string }
  | { name: 'text'; alias?: string }
  | { name: 'text_not'; alias?: string }
  | { name: 'text_in'; alias?: string }
  | { name: 'text_not_in'; alias?: string }
  | { name: 'text_lt'; alias?: string }
  | { name: 'text_lte'; alias?: string }
  | { name: 'text_gt'; alias?: string }
  | { name: 'text_gte'; alias?: string }
  | { name: 'text_contains'; alias?: string }
  | { name: 'text_not_contains'; alias?: string }
  | { name: 'text_starts_with'; alias?: string }
  | { name: 'text_not_starts_with'; alias?: string }
  | { name: 'text_ends_with'; alias?: string }
  | { name: 'text_not_ends_with'; alias?: string }
  | { name: 'serviceId'; alias?: string }
  | { name: 'serviceId_not'; alias?: string }
  | { name: 'serviceId_in'; alias?: string }
  | { name: 'serviceId_not_in'; alias?: string }
  | { name: 'serviceId_lt'; alias?: string }
  | { name: 'serviceId_lte'; alias?: string }
  | { name: 'serviceId_gt'; alias?: string }
  | { name: 'serviceId_gte'; alias?: string }
  | { name: 'serviceId_contains'; alias?: string }
  | { name: 'serviceId_not_contains'; alias?: string }
  | { name: 'serviceId_starts_with'; alias?: string }
  | { name: 'serviceId_not_starts_with'; alias?: string }
  | { name: 'serviceId_ends_with'; alias?: string }
  | { name: 'serviceId_not_ends_with'; alias?: string }
  | { name: 'service'; alias?: string }
  | { name: 'ownerId'; alias?: string }
  | { name: 'ownerId_not'; alias?: string }
  | { name: 'ownerId_in'; alias?: string }
  | { name: 'ownerId_not_in'; alias?: string }
  | { name: 'ownerId_lt'; alias?: string }
  | { name: 'ownerId_lte'; alias?: string }
  | { name: 'ownerId_gt'; alias?: string }
  | { name: 'ownerId_gte'; alias?: string }
  | { name: 'ownerId_contains'; alias?: string }
  | { name: 'ownerId_not_contains'; alias?: string }
  | { name: 'ownerId_starts_with'; alias?: string }
  | { name: 'ownerId_not_starts_with'; alias?: string }
  | { name: 'ownerId_ends_with'; alias?: string }
  | { name: 'ownerId_not_ends_with'; alias?: string }
  | { name: 'AND'; alias?: string }
  | { name: 'OR'; alias?: string }
  | { name: 'NOT'; alias?: string }

export interface CommentWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  text?: string | null
  text_not?: string | null
  text_in?: string[]
  text_not_in?: string[]
  text_lt?: string | null
  text_lte?: string | null
  text_gt?: string | null
  text_gte?: string | null
  text_contains?: string | null
  text_not_contains?: string | null
  text_starts_with?: string | null
  text_not_starts_with?: string | null
  text_ends_with?: string | null
  text_not_ends_with?: string | null
  service?: ServiceWhereInput | null
  ownerId?: string | null
  ownerId_not?: string | null
  ownerId_in?: string[]
  ownerId_not_in?: string[]
  ownerId_lt?: string | null
  ownerId_lte?: string | null
  ownerId_gt?: string | null
  ownerId_gte?: string | null
  ownerId_contains?: string | null
  ownerId_not_contains?: string | null
  ownerId_starts_with?: string | null
  ownerId_not_starts_with?: string | null
  ownerId_ends_with?: string | null
  ownerId_not_ends_with?: string | null
  AND?: CommentWhereInput[]
  OR?: CommentWhereInput[]
  NOT?: CommentWhereInput[]
}
export type CommentWhereInputInputObject =
  | Extract<keyof CommentWhereInput, string>
  | { name: 'id'; alias?: string }
  | { name: 'id_not'; alias?: string }
  | { name: 'id_in'; alias?: string }
  | { name: 'id_not_in'; alias?: string }
  | { name: 'id_lt'; alias?: string }
  | { name: 'id_lte'; alias?: string }
  | { name: 'id_gt'; alias?: string }
  | { name: 'id_gte'; alias?: string }
  | { name: 'id_contains'; alias?: string }
  | { name: 'id_not_contains'; alias?: string }
  | { name: 'id_starts_with'; alias?: string }
  | { name: 'id_not_starts_with'; alias?: string }
  | { name: 'id_ends_with'; alias?: string }
  | { name: 'id_not_ends_with'; alias?: string }
  | { name: 'createdAt'; alias?: string }
  | { name: 'createdAt_not'; alias?: string }
  | { name: 'createdAt_in'; alias?: string }
  | { name: 'createdAt_not_in'; alias?: string }
  | { name: 'createdAt_lt'; alias?: string }
  | { name: 'createdAt_lte'; alias?: string }
  | { name: 'createdAt_gt'; alias?: string }
  | { name: 'createdAt_gte'; alias?: string }
  | { name: 'updatedAt'; alias?: string }
  | { name: 'updatedAt_not'; alias?: string }
  | { name: 'updatedAt_in'; alias?: string }
  | { name: 'updatedAt_not_in'; alias?: string }
  | { name: 'updatedAt_lt'; alias?: string }
  | { name: 'updatedAt_lte'; alias?: string }
  | { name: 'updatedAt_gt'; alias?: string }
  | { name: 'updatedAt_gte'; alias?: string }
  | { name: 'text'; alias?: string }
  | { name: 'text_not'; alias?: string }
  | { name: 'text_in'; alias?: string }
  | { name: 'text_not_in'; alias?: string }
  | { name: 'text_lt'; alias?: string }
  | { name: 'text_lte'; alias?: string }
  | { name: 'text_gt'; alias?: string }
  | { name: 'text_gte'; alias?: string }
  | { name: 'text_contains'; alias?: string }
  | { name: 'text_not_contains'; alias?: string }
  | { name: 'text_starts_with'; alias?: string }
  | { name: 'text_not_starts_with'; alias?: string }
  | { name: 'text_ends_with'; alias?: string }
  | { name: 'text_not_ends_with'; alias?: string }
  | { name: 'service'; alias?: string }
  | { name: 'ownerId'; alias?: string }
  | { name: 'ownerId_not'; alias?: string }
  | { name: 'ownerId_in'; alias?: string }
  | { name: 'ownerId_not_in'; alias?: string }
  | { name: 'ownerId_lt'; alias?: string }
  | { name: 'ownerId_lte'; alias?: string }
  | { name: 'ownerId_gt'; alias?: string }
  | { name: 'ownerId_gte'; alias?: string }
  | { name: 'ownerId_contains'; alias?: string }
  | { name: 'ownerId_not_contains'; alias?: string }
  | { name: 'ownerId_starts_with'; alias?: string }
  | { name: 'ownerId_not_starts_with'; alias?: string }
  | { name: 'ownerId_ends_with'; alias?: string }
  | { name: 'ownerId_not_ends_with'; alias?: string }
  | { name: 'AND'; alias?: string }
  | { name: 'OR'; alias?: string }
  | { name: 'NOT'; alias?: string }

export interface ReviewWhereUniqueInput {
  id?: string | null
}
export type ReviewWhereUniqueInputInputObject =
  | Extract<keyof ReviewWhereUniqueInput, string>
  | { name: 'id'; alias?: string }

export interface CategoryWhereUniqueInput {
  id?: string | null
}
export type CategoryWhereUniqueInputInputObject =
  | Extract<keyof CategoryWhereUniqueInput, string>
  | { name: 'id'; alias?: string }

export interface ServiceWhereUniqueInput {
  id?: string | null
}
export type ServiceWhereUniqueInputInputObject =
  | Extract<keyof ServiceWhereUniqueInput, string>
  | { name: 'id'; alias?: string }

export interface CommentCreateInput {
  text?: string
  service?: ServiceCreateOneInput
  ownerId?: string | null
}
export type CommentCreateInputInputObject =
  | Extract<keyof CommentCreateInput, string>
  | { name: 'text'; alias?: string }
  | { name: 'service'; alias?: string }
  | { name: 'ownerId'; alias?: string }

export interface ServiceCreateOneInput {
  create?: ServiceCreateInput | null
  connect?: ServiceWhereUniqueInput | null
}
export type ServiceCreateOneInputInputObject =
  | Extract<keyof ServiceCreateOneInput, string>
  | { name: 'create'; alias?: string }
  | { name: 'connect'; alias?: string }

export interface ServiceCreateInput {
  address?: string | null
  category?: CategoryCreateOneWithoutServicesInput | null
  description?: string
  freetrial?: string | null
  isOnline?: boolean | null
  inquiry?: string | null
  likeCount?: number | null
  multiplans?: string | null
  note?: string | null
  phonenumber?: string | null
  photoURL?: string | null
  place?: string | null
  price?: number | null
  rating?: number | null
  ratingCount?: number | null
  reviews?: ReviewCreateManyWithoutServiceInput | null
  tagline?: string | null
  title?: string
  url?: string | null
  viewCount?: number | null
  yomigana?: string | null
}
export type ServiceCreateInputInputObject =
  | Extract<keyof ServiceCreateInput, string>
  | { name: 'address'; alias?: string }
  | { name: 'category'; alias?: string }
  | { name: 'description'; alias?: string }
  | { name: 'freetrial'; alias?: string }
  | { name: 'isOnline'; alias?: string }
  | { name: 'inquiry'; alias?: string }
  | { name: 'likeCount'; alias?: string }
  | { name: 'multiplans'; alias?: string }
  | { name: 'note'; alias?: string }
  | { name: 'phonenumber'; alias?: string }
  | { name: 'photoURL'; alias?: string }
  | { name: 'place'; alias?: string }
  | { name: 'price'; alias?: string }
  | { name: 'rating'; alias?: string }
  | { name: 'ratingCount'; alias?: string }
  | { name: 'reviews'; alias?: string }
  | { name: 'tagline'; alias?: string }
  | { name: 'title'; alias?: string }
  | { name: 'url'; alias?: string }
  | { name: 'viewCount'; alias?: string }
  | { name: 'yomigana'; alias?: string }

export interface CategoryCreateOneWithoutServicesInput {
  create?: CategoryCreateWithoutServicesInput | null
  connect?: CategoryWhereUniqueInput | null
}
export type CategoryCreateOneWithoutServicesInputInputObject =
  | Extract<keyof CategoryCreateOneWithoutServicesInput, string>
  | { name: 'create'; alias?: string }
  | { name: 'connect'; alias?: string }

export interface CategoryCreateWithoutServicesInput {
  name?: string
  shortDescription?: string
  description?: string
}
export type CategoryCreateWithoutServicesInputInputObject =
  | Extract<keyof CategoryCreateWithoutServicesInput, string>
  | { name: 'name'; alias?: string }
  | { name: 'shortDescription'; alias?: string }
  | { name: 'description'; alias?: string }

export interface ReviewCreateManyWithoutServiceInput {
  create?: ReviewCreateWithoutServiceInput[]
  connect?: ReviewWhereUniqueInput[]
}
export type ReviewCreateManyWithoutServiceInputInputObject =
  | Extract<keyof ReviewCreateManyWithoutServiceInput, string>
  | { name: 'create'; alias?: string }
  | { name: 'connect'; alias?: string }

export interface ReviewCreateWithoutServiceInput {
  rate?: number | null
  rating?: number
  text?: string
  serviceId?: string
  ownerId?: string | null
}
export type ReviewCreateWithoutServiceInputInputObject =
  | Extract<keyof ReviewCreateWithoutServiceInput, string>
  | { name: 'rate'; alias?: string }
  | { name: 'rating'; alias?: string }
  | { name: 'text'; alias?: string }
  | { name: 'serviceId'; alias?: string }
  | { name: 'ownerId'; alias?: string }

export interface CommentUpdateInput {
  text?: string | null
  service?: ServiceUpdateOneRequiredInput | null
  ownerId?: string | null
}
export type CommentUpdateInputInputObject =
  | Extract<keyof CommentUpdateInput, string>
  | { name: 'text'; alias?: string }
  | { name: 'service'; alias?: string }
  | { name: 'ownerId'; alias?: string }

export interface ServiceUpdateOneRequiredInput {
  create?: ServiceCreateInput | null
  update?: ServiceUpdateDataInput | null
  upsert?: ServiceUpsertNestedInput | null
  connect?: ServiceWhereUniqueInput | null
}
export type ServiceUpdateOneRequiredInputInputObject =
  | Extract<keyof ServiceUpdateOneRequiredInput, string>
  | { name: 'create'; alias?: string }
  | { name: 'update'; alias?: string }
  | { name: 'upsert'; alias?: string }
  | { name: 'connect'; alias?: string }

export interface ServiceUpdateDataInput {
  address?: string | null
  category?: CategoryUpdateOneWithoutServicesInput | null
  description?: string | null
  freetrial?: string | null
  isOnline?: boolean | null
  inquiry?: string | null
  likeCount?: number | null
  multiplans?: string | null
  note?: string | null
  phonenumber?: string | null
  photoURL?: string | null
  place?: string | null
  price?: number | null
  rating?: number | null
  ratingCount?: number | null
  reviews?: ReviewUpdateManyWithoutServiceInput | null
  tagline?: string | null
  title?: string | null
  url?: string | null
  viewCount?: number | null
  yomigana?: string | null
}
export type ServiceUpdateDataInputInputObject =
  | Extract<keyof ServiceUpdateDataInput, string>
  | { name: 'address'; alias?: string }
  | { name: 'category'; alias?: string }
  | { name: 'description'; alias?: string }
  | { name: 'freetrial'; alias?: string }
  | { name: 'isOnline'; alias?: string }
  | { name: 'inquiry'; alias?: string }
  | { name: 'likeCount'; alias?: string }
  | { name: 'multiplans'; alias?: string }
  | { name: 'note'; alias?: string }
  | { name: 'phonenumber'; alias?: string }
  | { name: 'photoURL'; alias?: string }
  | { name: 'place'; alias?: string }
  | { name: 'price'; alias?: string }
  | { name: 'rating'; alias?: string }
  | { name: 'ratingCount'; alias?: string }
  | { name: 'reviews'; alias?: string }
  | { name: 'tagline'; alias?: string }
  | { name: 'title'; alias?: string }
  | { name: 'url'; alias?: string }
  | { name: 'viewCount'; alias?: string }
  | { name: 'yomigana'; alias?: string }

export interface CategoryUpdateOneWithoutServicesInput {
  create?: CategoryCreateWithoutServicesInput | null
  update?: CategoryUpdateWithoutServicesDataInput | null
  upsert?: CategoryUpsertWithoutServicesInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: CategoryWhereUniqueInput | null
}
export type CategoryUpdateOneWithoutServicesInputInputObject =
  | Extract<keyof CategoryUpdateOneWithoutServicesInput, string>
  | { name: 'create'; alias?: string }
  | { name: 'update'; alias?: string }
  | { name: 'upsert'; alias?: string }
  | { name: 'delete'; alias?: string }
  | { name: 'disconnect'; alias?: string }
  | { name: 'connect'; alias?: string }

export interface CategoryUpdateWithoutServicesDataInput {
  name?: string | null
  shortDescription?: string | null
  description?: string | null
}
export type CategoryUpdateWithoutServicesDataInputInputObject =
  | Extract<keyof CategoryUpdateWithoutServicesDataInput, string>
  | { name: 'name'; alias?: string }
  | { name: 'shortDescription'; alias?: string }
  | { name: 'description'; alias?: string }

export interface CategoryUpsertWithoutServicesInput {
  update?: CategoryUpdateWithoutServicesDataInput
  create?: CategoryCreateWithoutServicesInput
}
export type CategoryUpsertWithoutServicesInputInputObject =
  | Extract<keyof CategoryUpsertWithoutServicesInput, string>
  | { name: 'update'; alias?: string }
  | { name: 'create'; alias?: string }

export interface ReviewUpdateManyWithoutServiceInput {
  create?: ReviewCreateWithoutServiceInput[]
  delete?: ReviewWhereUniqueInput[]
  connect?: ReviewWhereUniqueInput[]
  set?: ReviewWhereUniqueInput[]
  disconnect?: ReviewWhereUniqueInput[]
  update?: ReviewUpdateWithWhereUniqueWithoutServiceInput[]
  upsert?: ReviewUpsertWithWhereUniqueWithoutServiceInput[]
  deleteMany?: ReviewScalarWhereInput[]
  updateMany?: ReviewUpdateManyWithWhereNestedInput[]
}
export type ReviewUpdateManyWithoutServiceInputInputObject =
  | Extract<keyof ReviewUpdateManyWithoutServiceInput, string>
  | { name: 'create'; alias?: string }
  | { name: 'delete'; alias?: string }
  | { name: 'connect'; alias?: string }
  | { name: 'set'; alias?: string }
  | { name: 'disconnect'; alias?: string }
  | { name: 'update'; alias?: string }
  | { name: 'upsert'; alias?: string }
  | { name: 'deleteMany'; alias?: string }
  | { name: 'updateMany'; alias?: string }

export interface ReviewUpdateWithWhereUniqueWithoutServiceInput {
  where?: ReviewWhereUniqueInput
  data?: ReviewUpdateWithoutServiceDataInput
}
export type ReviewUpdateWithWhereUniqueWithoutServiceInputInputObject =
  | Extract<keyof ReviewUpdateWithWhereUniqueWithoutServiceInput, string>
  | { name: 'where'; alias?: string }
  | { name: 'data'; alias?: string }

export interface ReviewUpdateWithoutServiceDataInput {
  rate?: number | null
  rating?: number | null
  text?: string | null
  serviceId?: string | null
  ownerId?: string | null
}
export type ReviewUpdateWithoutServiceDataInputInputObject =
  | Extract<keyof ReviewUpdateWithoutServiceDataInput, string>
  | { name: 'rate'; alias?: string }
  | { name: 'rating'; alias?: string }
  | { name: 'text'; alias?: string }
  | { name: 'serviceId'; alias?: string }
  | { name: 'ownerId'; alias?: string }

export interface ReviewUpsertWithWhereUniqueWithoutServiceInput {
  where?: ReviewWhereUniqueInput
  update?: ReviewUpdateWithoutServiceDataInput
  create?: ReviewCreateWithoutServiceInput
}
export type ReviewUpsertWithWhereUniqueWithoutServiceInputInputObject =
  | Extract<keyof ReviewUpsertWithWhereUniqueWithoutServiceInput, string>
  | { name: 'where'; alias?: string }
  | { name: 'update'; alias?: string }
  | { name: 'create'; alias?: string }

export interface ReviewScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  rate?: number | null
  rate_not?: number | null
  rate_in?: number[]
  rate_not_in?: number[]
  rate_lt?: number | null
  rate_lte?: number | null
  rate_gt?: number | null
  rate_gte?: number | null
  rating?: number | null
  rating_not?: number | null
  rating_in?: number[]
  rating_not_in?: number[]
  rating_lt?: number | null
  rating_lte?: number | null
  rating_gt?: number | null
  rating_gte?: number | null
  text?: string | null
  text_not?: string | null
  text_in?: string[]
  text_not_in?: string[]
  text_lt?: string | null
  text_lte?: string | null
  text_gt?: string | null
  text_gte?: string | null
  text_contains?: string | null
  text_not_contains?: string | null
  text_starts_with?: string | null
  text_not_starts_with?: string | null
  text_ends_with?: string | null
  text_not_ends_with?: string | null
  serviceId?: string | null
  serviceId_not?: string | null
  serviceId_in?: string[]
  serviceId_not_in?: string[]
  serviceId_lt?: string | null
  serviceId_lte?: string | null
  serviceId_gt?: string | null
  serviceId_gte?: string | null
  serviceId_contains?: string | null
  serviceId_not_contains?: string | null
  serviceId_starts_with?: string | null
  serviceId_not_starts_with?: string | null
  serviceId_ends_with?: string | null
  serviceId_not_ends_with?: string | null
  ownerId?: string | null
  ownerId_not?: string | null
  ownerId_in?: string[]
  ownerId_not_in?: string[]
  ownerId_lt?: string | null
  ownerId_lte?: string | null
  ownerId_gt?: string | null
  ownerId_gte?: string | null
  ownerId_contains?: string | null
  ownerId_not_contains?: string | null
  ownerId_starts_with?: string | null
  ownerId_not_starts_with?: string | null
  ownerId_ends_with?: string | null
  ownerId_not_ends_with?: string | null
  AND?: ReviewScalarWhereInput[]
  OR?: ReviewScalarWhereInput[]
  NOT?: ReviewScalarWhereInput[]
}
export type ReviewScalarWhereInputInputObject =
  | Extract<keyof ReviewScalarWhereInput, string>
  | { name: 'id'; alias?: string }
  | { name: 'id_not'; alias?: string }
  | { name: 'id_in'; alias?: string }
  | { name: 'id_not_in'; alias?: string }
  | { name: 'id_lt'; alias?: string }
  | { name: 'id_lte'; alias?: string }
  | { name: 'id_gt'; alias?: string }
  | { name: 'id_gte'; alias?: string }
  | { name: 'id_contains'; alias?: string }
  | { name: 'id_not_contains'; alias?: string }
  | { name: 'id_starts_with'; alias?: string }
  | { name: 'id_not_starts_with'; alias?: string }
  | { name: 'id_ends_with'; alias?: string }
  | { name: 'id_not_ends_with'; alias?: string }
  | { name: 'createdAt'; alias?: string }
  | { name: 'createdAt_not'; alias?: string }
  | { name: 'createdAt_in'; alias?: string }
  | { name: 'createdAt_not_in'; alias?: string }
  | { name: 'createdAt_lt'; alias?: string }
  | { name: 'createdAt_lte'; alias?: string }
  | { name: 'createdAt_gt'; alias?: string }
  | { name: 'createdAt_gte'; alias?: string }
  | { name: 'updatedAt'; alias?: string }
  | { name: 'updatedAt_not'; alias?: string }
  | { name: 'updatedAt_in'; alias?: string }
  | { name: 'updatedAt_not_in'; alias?: string }
  | { name: 'updatedAt_lt'; alias?: string }
  | { name: 'updatedAt_lte'; alias?: string }
  | { name: 'updatedAt_gt'; alias?: string }
  | { name: 'updatedAt_gte'; alias?: string }
  | { name: 'rate'; alias?: string }
  | { name: 'rate_not'; alias?: string }
  | { name: 'rate_in'; alias?: string }
  | { name: 'rate_not_in'; alias?: string }
  | { name: 'rate_lt'; alias?: string }
  | { name: 'rate_lte'; alias?: string }
  | { name: 'rate_gt'; alias?: string }
  | { name: 'rate_gte'; alias?: string }
  | { name: 'rating'; alias?: string }
  | { name: 'rating_not'; alias?: string }
  | { name: 'rating_in'; alias?: string }
  | { name: 'rating_not_in'; alias?: string }
  | { name: 'rating_lt'; alias?: string }
  | { name: 'rating_lte'; alias?: string }
  | { name: 'rating_gt'; alias?: string }
  | { name: 'rating_gte'; alias?: string }
  | { name: 'text'; alias?: string }
  | { name: 'text_not'; alias?: string }
  | { name: 'text_in'; alias?: string }
  | { name: 'text_not_in'; alias?: string }
  | { name: 'text_lt'; alias?: string }
  | { name: 'text_lte'; alias?: string }
  | { name: 'text_gt'; alias?: string }
  | { name: 'text_gte'; alias?: string }
  | { name: 'text_contains'; alias?: string }
  | { name: 'text_not_contains'; alias?: string }
  | { name: 'text_starts_with'; alias?: string }
  | { name: 'text_not_starts_with'; alias?: string }
  | { name: 'text_ends_with'; alias?: string }
  | { name: 'text_not_ends_with'; alias?: string }
  | { name: 'serviceId'; alias?: string }
  | { name: 'serviceId_not'; alias?: string }
  | { name: 'serviceId_in'; alias?: string }
  | { name: 'serviceId_not_in'; alias?: string }
  | { name: 'serviceId_lt'; alias?: string }
  | { name: 'serviceId_lte'; alias?: string }
  | { name: 'serviceId_gt'; alias?: string }
  | { name: 'serviceId_gte'; alias?: string }
  | { name: 'serviceId_contains'; alias?: string }
  | { name: 'serviceId_not_contains'; alias?: string }
  | { name: 'serviceId_starts_with'; alias?: string }
  | { name: 'serviceId_not_starts_with'; alias?: string }
  | { name: 'serviceId_ends_with'; alias?: string }
  | { name: 'serviceId_not_ends_with'; alias?: string }
  | { name: 'ownerId'; alias?: string }
  | { name: 'ownerId_not'; alias?: string }
  | { name: 'ownerId_in'; alias?: string }
  | { name: 'ownerId_not_in'; alias?: string }
  | { name: 'ownerId_lt'; alias?: string }
  | { name: 'ownerId_lte'; alias?: string }
  | { name: 'ownerId_gt'; alias?: string }
  | { name: 'ownerId_gte'; alias?: string }
  | { name: 'ownerId_contains'; alias?: string }
  | { name: 'ownerId_not_contains'; alias?: string }
  | { name: 'ownerId_starts_with'; alias?: string }
  | { name: 'ownerId_not_starts_with'; alias?: string }
  | { name: 'ownerId_ends_with'; alias?: string }
  | { name: 'ownerId_not_ends_with'; alias?: string }
  | { name: 'AND'; alias?: string }
  | { name: 'OR'; alias?: string }
  | { name: 'NOT'; alias?: string }

export interface ReviewUpdateManyWithWhereNestedInput {
  where?: ReviewScalarWhereInput
  data?: ReviewUpdateManyDataInput
}
export type ReviewUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof ReviewUpdateManyWithWhereNestedInput, string>
  | { name: 'where'; alias?: string }
  | { name: 'data'; alias?: string }

export interface ReviewUpdateManyDataInput {
  rate?: number | null
  rating?: number | null
  text?: string | null
  serviceId?: string | null
  ownerId?: string | null
}
export type ReviewUpdateManyDataInputInputObject =
  | Extract<keyof ReviewUpdateManyDataInput, string>
  | { name: 'rate'; alias?: string }
  | { name: 'rating'; alias?: string }
  | { name: 'text'; alias?: string }
  | { name: 'serviceId'; alias?: string }
  | { name: 'ownerId'; alias?: string }

export interface ServiceUpsertNestedInput {
  update?: ServiceUpdateDataInput
  create?: ServiceCreateInput
}
export type ServiceUpsertNestedInputInputObject =
  | Extract<keyof ServiceUpsertNestedInput, string>
  | { name: 'update'; alias?: string }
  | { name: 'create'; alias?: string }

export interface CommentUpdateManyMutationInput {
  text?: string | null
  ownerId?: string | null
}
export type CommentUpdateManyMutationInputInputObject =
  | Extract<keyof CommentUpdateManyMutationInput, string>
  | { name: 'text'; alias?: string }
  | { name: 'ownerId'; alias?: string }

export interface ReviewCreateInput {
  rate?: number | null
  rating?: number
  text?: string
  serviceId?: string
  service?: ServiceCreateOneWithoutReviewsInput
  ownerId?: string | null
}
export type ReviewCreateInputInputObject =
  | Extract<keyof ReviewCreateInput, string>
  | { name: 'rate'; alias?: string }
  | { name: 'rating'; alias?: string }
  | { name: 'text'; alias?: string }
  | { name: 'serviceId'; alias?: string }
  | { name: 'service'; alias?: string }
  | { name: 'ownerId'; alias?: string }

export interface ServiceCreateOneWithoutReviewsInput {
  create?: ServiceCreateWithoutReviewsInput | null
  connect?: ServiceWhereUniqueInput | null
}
export type ServiceCreateOneWithoutReviewsInputInputObject =
  | Extract<keyof ServiceCreateOneWithoutReviewsInput, string>
  | { name: 'create'; alias?: string }
  | { name: 'connect'; alias?: string }

export interface ServiceCreateWithoutReviewsInput {
  address?: string | null
  category?: CategoryCreateOneWithoutServicesInput | null
  description?: string
  freetrial?: string | null
  isOnline?: boolean | null
  inquiry?: string | null
  likeCount?: number | null
  multiplans?: string | null
  note?: string | null
  phonenumber?: string | null
  photoURL?: string | null
  place?: string | null
  price?: number | null
  rating?: number | null
  ratingCount?: number | null
  tagline?: string | null
  title?: string
  url?: string | null
  viewCount?: number | null
  yomigana?: string | null
}
export type ServiceCreateWithoutReviewsInputInputObject =
  | Extract<keyof ServiceCreateWithoutReviewsInput, string>
  | { name: 'address'; alias?: string }
  | { name: 'category'; alias?: string }
  | { name: 'description'; alias?: string }
  | { name: 'freetrial'; alias?: string }
  | { name: 'isOnline'; alias?: string }
  | { name: 'inquiry'; alias?: string }
  | { name: 'likeCount'; alias?: string }
  | { name: 'multiplans'; alias?: string }
  | { name: 'note'; alias?: string }
  | { name: 'phonenumber'; alias?: string }
  | { name: 'photoURL'; alias?: string }
  | { name: 'place'; alias?: string }
  | { name: 'price'; alias?: string }
  | { name: 'rating'; alias?: string }
  | { name: 'ratingCount'; alias?: string }
  | { name: 'tagline'; alias?: string }
  | { name: 'title'; alias?: string }
  | { name: 'url'; alias?: string }
  | { name: 'viewCount'; alias?: string }
  | { name: 'yomigana'; alias?: string }

export interface ReviewUpdateInput {
  rate?: number | null
  rating?: number | null
  text?: string | null
  serviceId?: string | null
  service?: ServiceUpdateOneRequiredWithoutReviewsInput | null
  ownerId?: string | null
}
export type ReviewUpdateInputInputObject =
  | Extract<keyof ReviewUpdateInput, string>
  | { name: 'rate'; alias?: string }
  | { name: 'rating'; alias?: string }
  | { name: 'text'; alias?: string }
  | { name: 'serviceId'; alias?: string }
  | { name: 'service'; alias?: string }
  | { name: 'ownerId'; alias?: string }

export interface ServiceUpdateOneRequiredWithoutReviewsInput {
  create?: ServiceCreateWithoutReviewsInput | null
  update?: ServiceUpdateWithoutReviewsDataInput | null
  upsert?: ServiceUpsertWithoutReviewsInput | null
  connect?: ServiceWhereUniqueInput | null
}
export type ServiceUpdateOneRequiredWithoutReviewsInputInputObject =
  | Extract<keyof ServiceUpdateOneRequiredWithoutReviewsInput, string>
  | { name: 'create'; alias?: string }
  | { name: 'update'; alias?: string }
  | { name: 'upsert'; alias?: string }
  | { name: 'connect'; alias?: string }

export interface ServiceUpdateWithoutReviewsDataInput {
  address?: string | null
  category?: CategoryUpdateOneWithoutServicesInput | null
  description?: string | null
  freetrial?: string | null
  isOnline?: boolean | null
  inquiry?: string | null
  likeCount?: number | null
  multiplans?: string | null
  note?: string | null
  phonenumber?: string | null
  photoURL?: string | null
  place?: string | null
  price?: number | null
  rating?: number | null
  ratingCount?: number | null
  tagline?: string | null
  title?: string | null
  url?: string | null
  viewCount?: number | null
  yomigana?: string | null
}
export type ServiceUpdateWithoutReviewsDataInputInputObject =
  | Extract<keyof ServiceUpdateWithoutReviewsDataInput, string>
  | { name: 'address'; alias?: string }
  | { name: 'category'; alias?: string }
  | { name: 'description'; alias?: string }
  | { name: 'freetrial'; alias?: string }
  | { name: 'isOnline'; alias?: string }
  | { name: 'inquiry'; alias?: string }
  | { name: 'likeCount'; alias?: string }
  | { name: 'multiplans'; alias?: string }
  | { name: 'note'; alias?: string }
  | { name: 'phonenumber'; alias?: string }
  | { name: 'photoURL'; alias?: string }
  | { name: 'place'; alias?: string }
  | { name: 'price'; alias?: string }
  | { name: 'rating'; alias?: string }
  | { name: 'ratingCount'; alias?: string }
  | { name: 'tagline'; alias?: string }
  | { name: 'title'; alias?: string }
  | { name: 'url'; alias?: string }
  | { name: 'viewCount'; alias?: string }
  | { name: 'yomigana'; alias?: string }

export interface ServiceUpsertWithoutReviewsInput {
  update?: ServiceUpdateWithoutReviewsDataInput
  create?: ServiceCreateWithoutReviewsInput
}
export type ServiceUpsertWithoutReviewsInputInputObject =
  | Extract<keyof ServiceUpsertWithoutReviewsInput, string>
  | { name: 'update'; alias?: string }
  | { name: 'create'; alias?: string }

export interface ReviewUpdateManyMutationInput {
  rate?: number | null
  rating?: number | null
  text?: string | null
  serviceId?: string | null
  ownerId?: string | null
}
export type ReviewUpdateManyMutationInputInputObject =
  | Extract<keyof ReviewUpdateManyMutationInput, string>
  | { name: 'rate'; alias?: string }
  | { name: 'rating'; alias?: string }
  | { name: 'text'; alias?: string }
  | { name: 'serviceId'; alias?: string }
  | { name: 'ownerId'; alias?: string }

export interface CategoryCreateInput {
  name?: string
  services?: ServiceCreateManyWithoutCategoryInput | null
  shortDescription?: string
  description?: string
}
export type CategoryCreateInputInputObject =
  | Extract<keyof CategoryCreateInput, string>
  | { name: 'name'; alias?: string }
  | { name: 'services'; alias?: string }
  | { name: 'shortDescription'; alias?: string }
  | { name: 'description'; alias?: string }

export interface ServiceCreateManyWithoutCategoryInput {
  create?: ServiceCreateWithoutCategoryInput[]
  connect?: ServiceWhereUniqueInput[]
}
export type ServiceCreateManyWithoutCategoryInputInputObject =
  | Extract<keyof ServiceCreateManyWithoutCategoryInput, string>
  | { name: 'create'; alias?: string }
  | { name: 'connect'; alias?: string }

export interface ServiceCreateWithoutCategoryInput {
  address?: string | null
  description?: string
  freetrial?: string | null
  isOnline?: boolean | null
  inquiry?: string | null
  likeCount?: number | null
  multiplans?: string | null
  note?: string | null
  phonenumber?: string | null
  photoURL?: string | null
  place?: string | null
  price?: number | null
  rating?: number | null
  ratingCount?: number | null
  reviews?: ReviewCreateManyWithoutServiceInput | null
  tagline?: string | null
  title?: string
  url?: string | null
  viewCount?: number | null
  yomigana?: string | null
}
export type ServiceCreateWithoutCategoryInputInputObject =
  | Extract<keyof ServiceCreateWithoutCategoryInput, string>
  | { name: 'address'; alias?: string }
  | { name: 'description'; alias?: string }
  | { name: 'freetrial'; alias?: string }
  | { name: 'isOnline'; alias?: string }
  | { name: 'inquiry'; alias?: string }
  | { name: 'likeCount'; alias?: string }
  | { name: 'multiplans'; alias?: string }
  | { name: 'note'; alias?: string }
  | { name: 'phonenumber'; alias?: string }
  | { name: 'photoURL'; alias?: string }
  | { name: 'place'; alias?: string }
  | { name: 'price'; alias?: string }
  | { name: 'rating'; alias?: string }
  | { name: 'ratingCount'; alias?: string }
  | { name: 'reviews'; alias?: string }
  | { name: 'tagline'; alias?: string }
  | { name: 'title'; alias?: string }
  | { name: 'url'; alias?: string }
  | { name: 'viewCount'; alias?: string }
  | { name: 'yomigana'; alias?: string }

export interface CategoryUpdateInput {
  name?: string | null
  services?: ServiceUpdateManyWithoutCategoryInput | null
  shortDescription?: string | null
  description?: string | null
}
export type CategoryUpdateInputInputObject =
  | Extract<keyof CategoryUpdateInput, string>
  | { name: 'name'; alias?: string }
  | { name: 'services'; alias?: string }
  | { name: 'shortDescription'; alias?: string }
  | { name: 'description'; alias?: string }

export interface ServiceUpdateManyWithoutCategoryInput {
  create?: ServiceCreateWithoutCategoryInput[]
  delete?: ServiceWhereUniqueInput[]
  connect?: ServiceWhereUniqueInput[]
  set?: ServiceWhereUniqueInput[]
  disconnect?: ServiceWhereUniqueInput[]
  update?: ServiceUpdateWithWhereUniqueWithoutCategoryInput[]
  upsert?: ServiceUpsertWithWhereUniqueWithoutCategoryInput[]
  deleteMany?: ServiceScalarWhereInput[]
  updateMany?: ServiceUpdateManyWithWhereNestedInput[]
}
export type ServiceUpdateManyWithoutCategoryInputInputObject =
  | Extract<keyof ServiceUpdateManyWithoutCategoryInput, string>
  | { name: 'create'; alias?: string }
  | { name: 'delete'; alias?: string }
  | { name: 'connect'; alias?: string }
  | { name: 'set'; alias?: string }
  | { name: 'disconnect'; alias?: string }
  | { name: 'update'; alias?: string }
  | { name: 'upsert'; alias?: string }
  | { name: 'deleteMany'; alias?: string }
  | { name: 'updateMany'; alias?: string }

export interface ServiceUpdateWithWhereUniqueWithoutCategoryInput {
  where?: ServiceWhereUniqueInput
  data?: ServiceUpdateWithoutCategoryDataInput
}
export type ServiceUpdateWithWhereUniqueWithoutCategoryInputInputObject =
  | Extract<keyof ServiceUpdateWithWhereUniqueWithoutCategoryInput, string>
  | { name: 'where'; alias?: string }
  | { name: 'data'; alias?: string }

export interface ServiceUpdateWithoutCategoryDataInput {
  address?: string | null
  description?: string | null
  freetrial?: string | null
  isOnline?: boolean | null
  inquiry?: string | null
  likeCount?: number | null
  multiplans?: string | null
  note?: string | null
  phonenumber?: string | null
  photoURL?: string | null
  place?: string | null
  price?: number | null
  rating?: number | null
  ratingCount?: number | null
  reviews?: ReviewUpdateManyWithoutServiceInput | null
  tagline?: string | null
  title?: string | null
  url?: string | null
  viewCount?: number | null
  yomigana?: string | null
}
export type ServiceUpdateWithoutCategoryDataInputInputObject =
  | Extract<keyof ServiceUpdateWithoutCategoryDataInput, string>
  | { name: 'address'; alias?: string }
  | { name: 'description'; alias?: string }
  | { name: 'freetrial'; alias?: string }
  | { name: 'isOnline'; alias?: string }
  | { name: 'inquiry'; alias?: string }
  | { name: 'likeCount'; alias?: string }
  | { name: 'multiplans'; alias?: string }
  | { name: 'note'; alias?: string }
  | { name: 'phonenumber'; alias?: string }
  | { name: 'photoURL'; alias?: string }
  | { name: 'place'; alias?: string }
  | { name: 'price'; alias?: string }
  | { name: 'rating'; alias?: string }
  | { name: 'ratingCount'; alias?: string }
  | { name: 'reviews'; alias?: string }
  | { name: 'tagline'; alias?: string }
  | { name: 'title'; alias?: string }
  | { name: 'url'; alias?: string }
  | { name: 'viewCount'; alias?: string }
  | { name: 'yomigana'; alias?: string }

export interface ServiceUpsertWithWhereUniqueWithoutCategoryInput {
  where?: ServiceWhereUniqueInput
  update?: ServiceUpdateWithoutCategoryDataInput
  create?: ServiceCreateWithoutCategoryInput
}
export type ServiceUpsertWithWhereUniqueWithoutCategoryInputInputObject =
  | Extract<keyof ServiceUpsertWithWhereUniqueWithoutCategoryInput, string>
  | { name: 'where'; alias?: string }
  | { name: 'update'; alias?: string }
  | { name: 'create'; alias?: string }

export interface ServiceScalarWhereInput {
  address?: string | null
  address_not?: string | null
  address_in?: string[]
  address_not_in?: string[]
  address_lt?: string | null
  address_lte?: string | null
  address_gt?: string | null
  address_gte?: string | null
  address_contains?: string | null
  address_not_contains?: string | null
  address_starts_with?: string | null
  address_not_starts_with?: string | null
  address_ends_with?: string | null
  address_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  freetrial?: string | null
  freetrial_not?: string | null
  freetrial_in?: string[]
  freetrial_not_in?: string[]
  freetrial_lt?: string | null
  freetrial_lte?: string | null
  freetrial_gt?: string | null
  freetrial_gte?: string | null
  freetrial_contains?: string | null
  freetrial_not_contains?: string | null
  freetrial_starts_with?: string | null
  freetrial_not_starts_with?: string | null
  freetrial_ends_with?: string | null
  freetrial_not_ends_with?: string | null
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  isOnline?: boolean | null
  isOnline_not?: boolean | null
  inquiry?: string | null
  inquiry_not?: string | null
  inquiry_in?: string[]
  inquiry_not_in?: string[]
  inquiry_lt?: string | null
  inquiry_lte?: string | null
  inquiry_gt?: string | null
  inquiry_gte?: string | null
  inquiry_contains?: string | null
  inquiry_not_contains?: string | null
  inquiry_starts_with?: string | null
  inquiry_not_starts_with?: string | null
  inquiry_ends_with?: string | null
  inquiry_not_ends_with?: string | null
  likeCount?: number | null
  likeCount_not?: number | null
  likeCount_in?: number[]
  likeCount_not_in?: number[]
  likeCount_lt?: number | null
  likeCount_lte?: number | null
  likeCount_gt?: number | null
  likeCount_gte?: number | null
  multiplans?: string | null
  multiplans_not?: string | null
  multiplans_in?: string[]
  multiplans_not_in?: string[]
  multiplans_lt?: string | null
  multiplans_lte?: string | null
  multiplans_gt?: string | null
  multiplans_gte?: string | null
  multiplans_contains?: string | null
  multiplans_not_contains?: string | null
  multiplans_starts_with?: string | null
  multiplans_not_starts_with?: string | null
  multiplans_ends_with?: string | null
  multiplans_not_ends_with?: string | null
  note?: string | null
  note_not?: string | null
  note_in?: string[]
  note_not_in?: string[]
  note_lt?: string | null
  note_lte?: string | null
  note_gt?: string | null
  note_gte?: string | null
  note_contains?: string | null
  note_not_contains?: string | null
  note_starts_with?: string | null
  note_not_starts_with?: string | null
  note_ends_with?: string | null
  note_not_ends_with?: string | null
  phonenumber?: string | null
  phonenumber_not?: string | null
  phonenumber_in?: string[]
  phonenumber_not_in?: string[]
  phonenumber_lt?: string | null
  phonenumber_lte?: string | null
  phonenumber_gt?: string | null
  phonenumber_gte?: string | null
  phonenumber_contains?: string | null
  phonenumber_not_contains?: string | null
  phonenumber_starts_with?: string | null
  phonenumber_not_starts_with?: string | null
  phonenumber_ends_with?: string | null
  phonenumber_not_ends_with?: string | null
  photoURL?: string | null
  photoURL_not?: string | null
  photoURL_in?: string[]
  photoURL_not_in?: string[]
  photoURL_lt?: string | null
  photoURL_lte?: string | null
  photoURL_gt?: string | null
  photoURL_gte?: string | null
  photoURL_contains?: string | null
  photoURL_not_contains?: string | null
  photoURL_starts_with?: string | null
  photoURL_not_starts_with?: string | null
  photoURL_ends_with?: string | null
  photoURL_not_ends_with?: string | null
  place?: string | null
  place_not?: string | null
  place_in?: string[]
  place_not_in?: string[]
  place_lt?: string | null
  place_lte?: string | null
  place_gt?: string | null
  place_gte?: string | null
  place_contains?: string | null
  place_not_contains?: string | null
  place_starts_with?: string | null
  place_not_starts_with?: string | null
  place_ends_with?: string | null
  place_not_ends_with?: string | null
  price?: number | null
  price_not?: number | null
  price_in?: number[]
  price_not_in?: number[]
  price_lt?: number | null
  price_lte?: number | null
  price_gt?: number | null
  price_gte?: number | null
  rating?: number | null
  rating_not?: number | null
  rating_in?: number[]
  rating_not_in?: number[]
  rating_lt?: number | null
  rating_lte?: number | null
  rating_gt?: number | null
  rating_gte?: number | null
  ratingCount?: number | null
  ratingCount_not?: number | null
  ratingCount_in?: number[]
  ratingCount_not_in?: number[]
  ratingCount_lt?: number | null
  ratingCount_lte?: number | null
  ratingCount_gt?: number | null
  ratingCount_gte?: number | null
  tagline?: string | null
  tagline_not?: string | null
  tagline_in?: string[]
  tagline_not_in?: string[]
  tagline_lt?: string | null
  tagline_lte?: string | null
  tagline_gt?: string | null
  tagline_gte?: string | null
  tagline_contains?: string | null
  tagline_not_contains?: string | null
  tagline_starts_with?: string | null
  tagline_not_starts_with?: string | null
  tagline_ends_with?: string | null
  tagline_not_ends_with?: string | null
  title?: string | null
  title_not?: string | null
  title_in?: string[]
  title_not_in?: string[]
  title_lt?: string | null
  title_lte?: string | null
  title_gt?: string | null
  title_gte?: string | null
  title_contains?: string | null
  title_not_contains?: string | null
  title_starts_with?: string | null
  title_not_starts_with?: string | null
  title_ends_with?: string | null
  title_not_ends_with?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  url?: string | null
  url_not?: string | null
  url_in?: string[]
  url_not_in?: string[]
  url_lt?: string | null
  url_lte?: string | null
  url_gt?: string | null
  url_gte?: string | null
  url_contains?: string | null
  url_not_contains?: string | null
  url_starts_with?: string | null
  url_not_starts_with?: string | null
  url_ends_with?: string | null
  url_not_ends_with?: string | null
  viewCount?: number | null
  viewCount_not?: number | null
  viewCount_in?: number[]
  viewCount_not_in?: number[]
  viewCount_lt?: number | null
  viewCount_lte?: number | null
  viewCount_gt?: number | null
  viewCount_gte?: number | null
  yomigana?: string | null
  yomigana_not?: string | null
  yomigana_in?: string[]
  yomigana_not_in?: string[]
  yomigana_lt?: string | null
  yomigana_lte?: string | null
  yomigana_gt?: string | null
  yomigana_gte?: string | null
  yomigana_contains?: string | null
  yomigana_not_contains?: string | null
  yomigana_starts_with?: string | null
  yomigana_not_starts_with?: string | null
  yomigana_ends_with?: string | null
  yomigana_not_ends_with?: string | null
  AND?: ServiceScalarWhereInput[]
  OR?: ServiceScalarWhereInput[]
  NOT?: ServiceScalarWhereInput[]
}
export type ServiceScalarWhereInputInputObject =
  | Extract<keyof ServiceScalarWhereInput, string>
  | { name: 'address'; alias?: string }
  | { name: 'address_not'; alias?: string }
  | { name: 'address_in'; alias?: string }
  | { name: 'address_not_in'; alias?: string }
  | { name: 'address_lt'; alias?: string }
  | { name: 'address_lte'; alias?: string }
  | { name: 'address_gt'; alias?: string }
  | { name: 'address_gte'; alias?: string }
  | { name: 'address_contains'; alias?: string }
  | { name: 'address_not_contains'; alias?: string }
  | { name: 'address_starts_with'; alias?: string }
  | { name: 'address_not_starts_with'; alias?: string }
  | { name: 'address_ends_with'; alias?: string }
  | { name: 'address_not_ends_with'; alias?: string }
  | { name: 'createdAt'; alias?: string }
  | { name: 'createdAt_not'; alias?: string }
  | { name: 'createdAt_in'; alias?: string }
  | { name: 'createdAt_not_in'; alias?: string }
  | { name: 'createdAt_lt'; alias?: string }
  | { name: 'createdAt_lte'; alias?: string }
  | { name: 'createdAt_gt'; alias?: string }
  | { name: 'createdAt_gte'; alias?: string }
  | { name: 'description'; alias?: string }
  | { name: 'description_not'; alias?: string }
  | { name: 'description_in'; alias?: string }
  | { name: 'description_not_in'; alias?: string }
  | { name: 'description_lt'; alias?: string }
  | { name: 'description_lte'; alias?: string }
  | { name: 'description_gt'; alias?: string }
  | { name: 'description_gte'; alias?: string }
  | { name: 'description_contains'; alias?: string }
  | { name: 'description_not_contains'; alias?: string }
  | { name: 'description_starts_with'; alias?: string }
  | { name: 'description_not_starts_with'; alias?: string }
  | { name: 'description_ends_with'; alias?: string }
  | { name: 'description_not_ends_with'; alias?: string }
  | { name: 'freetrial'; alias?: string }
  | { name: 'freetrial_not'; alias?: string }
  | { name: 'freetrial_in'; alias?: string }
  | { name: 'freetrial_not_in'; alias?: string }
  | { name: 'freetrial_lt'; alias?: string }
  | { name: 'freetrial_lte'; alias?: string }
  | { name: 'freetrial_gt'; alias?: string }
  | { name: 'freetrial_gte'; alias?: string }
  | { name: 'freetrial_contains'; alias?: string }
  | { name: 'freetrial_not_contains'; alias?: string }
  | { name: 'freetrial_starts_with'; alias?: string }
  | { name: 'freetrial_not_starts_with'; alias?: string }
  | { name: 'freetrial_ends_with'; alias?: string }
  | { name: 'freetrial_not_ends_with'; alias?: string }
  | { name: 'id'; alias?: string }
  | { name: 'id_not'; alias?: string }
  | { name: 'id_in'; alias?: string }
  | { name: 'id_not_in'; alias?: string }
  | { name: 'id_lt'; alias?: string }
  | { name: 'id_lte'; alias?: string }
  | { name: 'id_gt'; alias?: string }
  | { name: 'id_gte'; alias?: string }
  | { name: 'id_contains'; alias?: string }
  | { name: 'id_not_contains'; alias?: string }
  | { name: 'id_starts_with'; alias?: string }
  | { name: 'id_not_starts_with'; alias?: string }
  | { name: 'id_ends_with'; alias?: string }
  | { name: 'id_not_ends_with'; alias?: string }
  | { name: 'isOnline'; alias?: string }
  | { name: 'isOnline_not'; alias?: string }
  | { name: 'inquiry'; alias?: string }
  | { name: 'inquiry_not'; alias?: string }
  | { name: 'inquiry_in'; alias?: string }
  | { name: 'inquiry_not_in'; alias?: string }
  | { name: 'inquiry_lt'; alias?: string }
  | { name: 'inquiry_lte'; alias?: string }
  | { name: 'inquiry_gt'; alias?: string }
  | { name: 'inquiry_gte'; alias?: string }
  | { name: 'inquiry_contains'; alias?: string }
  | { name: 'inquiry_not_contains'; alias?: string }
  | { name: 'inquiry_starts_with'; alias?: string }
  | { name: 'inquiry_not_starts_with'; alias?: string }
  | { name: 'inquiry_ends_with'; alias?: string }
  | { name: 'inquiry_not_ends_with'; alias?: string }
  | { name: 'likeCount'; alias?: string }
  | { name: 'likeCount_not'; alias?: string }
  | { name: 'likeCount_in'; alias?: string }
  | { name: 'likeCount_not_in'; alias?: string }
  | { name: 'likeCount_lt'; alias?: string }
  | { name: 'likeCount_lte'; alias?: string }
  | { name: 'likeCount_gt'; alias?: string }
  | { name: 'likeCount_gte'; alias?: string }
  | { name: 'multiplans'; alias?: string }
  | { name: 'multiplans_not'; alias?: string }
  | { name: 'multiplans_in'; alias?: string }
  | { name: 'multiplans_not_in'; alias?: string }
  | { name: 'multiplans_lt'; alias?: string }
  | { name: 'multiplans_lte'; alias?: string }
  | { name: 'multiplans_gt'; alias?: string }
  | { name: 'multiplans_gte'; alias?: string }
  | { name: 'multiplans_contains'; alias?: string }
  | { name: 'multiplans_not_contains'; alias?: string }
  | { name: 'multiplans_starts_with'; alias?: string }
  | { name: 'multiplans_not_starts_with'; alias?: string }
  | { name: 'multiplans_ends_with'; alias?: string }
  | { name: 'multiplans_not_ends_with'; alias?: string }
  | { name: 'note'; alias?: string }
  | { name: 'note_not'; alias?: string }
  | { name: 'note_in'; alias?: string }
  | { name: 'note_not_in'; alias?: string }
  | { name: 'note_lt'; alias?: string }
  | { name: 'note_lte'; alias?: string }
  | { name: 'note_gt'; alias?: string }
  | { name: 'note_gte'; alias?: string }
  | { name: 'note_contains'; alias?: string }
  | { name: 'note_not_contains'; alias?: string }
  | { name: 'note_starts_with'; alias?: string }
  | { name: 'note_not_starts_with'; alias?: string }
  | { name: 'note_ends_with'; alias?: string }
  | { name: 'note_not_ends_with'; alias?: string }
  | { name: 'phonenumber'; alias?: string }
  | { name: 'phonenumber_not'; alias?: string }
  | { name: 'phonenumber_in'; alias?: string }
  | { name: 'phonenumber_not_in'; alias?: string }
  | { name: 'phonenumber_lt'; alias?: string }
  | { name: 'phonenumber_lte'; alias?: string }
  | { name: 'phonenumber_gt'; alias?: string }
  | { name: 'phonenumber_gte'; alias?: string }
  | { name: 'phonenumber_contains'; alias?: string }
  | { name: 'phonenumber_not_contains'; alias?: string }
  | { name: 'phonenumber_starts_with'; alias?: string }
  | { name: 'phonenumber_not_starts_with'; alias?: string }
  | { name: 'phonenumber_ends_with'; alias?: string }
  | { name: 'phonenumber_not_ends_with'; alias?: string }
  | { name: 'photoURL'; alias?: string }
  | { name: 'photoURL_not'; alias?: string }
  | { name: 'photoURL_in'; alias?: string }
  | { name: 'photoURL_not_in'; alias?: string }
  | { name: 'photoURL_lt'; alias?: string }
  | { name: 'photoURL_lte'; alias?: string }
  | { name: 'photoURL_gt'; alias?: string }
  | { name: 'photoURL_gte'; alias?: string }
  | { name: 'photoURL_contains'; alias?: string }
  | { name: 'photoURL_not_contains'; alias?: string }
  | { name: 'photoURL_starts_with'; alias?: string }
  | { name: 'photoURL_not_starts_with'; alias?: string }
  | { name: 'photoURL_ends_with'; alias?: string }
  | { name: 'photoURL_not_ends_with'; alias?: string }
  | { name: 'place'; alias?: string }
  | { name: 'place_not'; alias?: string }
  | { name: 'place_in'; alias?: string }
  | { name: 'place_not_in'; alias?: string }
  | { name: 'place_lt'; alias?: string }
  | { name: 'place_lte'; alias?: string }
  | { name: 'place_gt'; alias?: string }
  | { name: 'place_gte'; alias?: string }
  | { name: 'place_contains'; alias?: string }
  | { name: 'place_not_contains'; alias?: string }
  | { name: 'place_starts_with'; alias?: string }
  | { name: 'place_not_starts_with'; alias?: string }
  | { name: 'place_ends_with'; alias?: string }
  | { name: 'place_not_ends_with'; alias?: string }
  | { name: 'price'; alias?: string }
  | { name: 'price_not'; alias?: string }
  | { name: 'price_in'; alias?: string }
  | { name: 'price_not_in'; alias?: string }
  | { name: 'price_lt'; alias?: string }
  | { name: 'price_lte'; alias?: string }
  | { name: 'price_gt'; alias?: string }
  | { name: 'price_gte'; alias?: string }
  | { name: 'rating'; alias?: string }
  | { name: 'rating_not'; alias?: string }
  | { name: 'rating_in'; alias?: string }
  | { name: 'rating_not_in'; alias?: string }
  | { name: 'rating_lt'; alias?: string }
  | { name: 'rating_lte'; alias?: string }
  | { name: 'rating_gt'; alias?: string }
  | { name: 'rating_gte'; alias?: string }
  | { name: 'ratingCount'; alias?: string }
  | { name: 'ratingCount_not'; alias?: string }
  | { name: 'ratingCount_in'; alias?: string }
  | { name: 'ratingCount_not_in'; alias?: string }
  | { name: 'ratingCount_lt'; alias?: string }
  | { name: 'ratingCount_lte'; alias?: string }
  | { name: 'ratingCount_gt'; alias?: string }
  | { name: 'ratingCount_gte'; alias?: string }
  | { name: 'tagline'; alias?: string }
  | { name: 'tagline_not'; alias?: string }
  | { name: 'tagline_in'; alias?: string }
  | { name: 'tagline_not_in'; alias?: string }
  | { name: 'tagline_lt'; alias?: string }
  | { name: 'tagline_lte'; alias?: string }
  | { name: 'tagline_gt'; alias?: string }
  | { name: 'tagline_gte'; alias?: string }
  | { name: 'tagline_contains'; alias?: string }
  | { name: 'tagline_not_contains'; alias?: string }
  | { name: 'tagline_starts_with'; alias?: string }
  | { name: 'tagline_not_starts_with'; alias?: string }
  | { name: 'tagline_ends_with'; alias?: string }
  | { name: 'tagline_not_ends_with'; alias?: string }
  | { name: 'title'; alias?: string }
  | { name: 'title_not'; alias?: string }
  | { name: 'title_in'; alias?: string }
  | { name: 'title_not_in'; alias?: string }
  | { name: 'title_lt'; alias?: string }
  | { name: 'title_lte'; alias?: string }
  | { name: 'title_gt'; alias?: string }
  | { name: 'title_gte'; alias?: string }
  | { name: 'title_contains'; alias?: string }
  | { name: 'title_not_contains'; alias?: string }
  | { name: 'title_starts_with'; alias?: string }
  | { name: 'title_not_starts_with'; alias?: string }
  | { name: 'title_ends_with'; alias?: string }
  | { name: 'title_not_ends_with'; alias?: string }
  | { name: 'updatedAt'; alias?: string }
  | { name: 'updatedAt_not'; alias?: string }
  | { name: 'updatedAt_in'; alias?: string }
  | { name: 'updatedAt_not_in'; alias?: string }
  | { name: 'updatedAt_lt'; alias?: string }
  | { name: 'updatedAt_lte'; alias?: string }
  | { name: 'updatedAt_gt'; alias?: string }
  | { name: 'updatedAt_gte'; alias?: string }
  | { name: 'url'; alias?: string }
  | { name: 'url_not'; alias?: string }
  | { name: 'url_in'; alias?: string }
  | { name: 'url_not_in'; alias?: string }
  | { name: 'url_lt'; alias?: string }
  | { name: 'url_lte'; alias?: string }
  | { name: 'url_gt'; alias?: string }
  | { name: 'url_gte'; alias?: string }
  | { name: 'url_contains'; alias?: string }
  | { name: 'url_not_contains'; alias?: string }
  | { name: 'url_starts_with'; alias?: string }
  | { name: 'url_not_starts_with'; alias?: string }
  | { name: 'url_ends_with'; alias?: string }
  | { name: 'url_not_ends_with'; alias?: string }
  | { name: 'viewCount'; alias?: string }
  | { name: 'viewCount_not'; alias?: string }
  | { name: 'viewCount_in'; alias?: string }
  | { name: 'viewCount_not_in'; alias?: string }
  | { name: 'viewCount_lt'; alias?: string }
  | { name: 'viewCount_lte'; alias?: string }
  | { name: 'viewCount_gt'; alias?: string }
  | { name: 'viewCount_gte'; alias?: string }
  | { name: 'yomigana'; alias?: string }
  | { name: 'yomigana_not'; alias?: string }
  | { name: 'yomigana_in'; alias?: string }
  | { name: 'yomigana_not_in'; alias?: string }
  | { name: 'yomigana_lt'; alias?: string }
  | { name: 'yomigana_lte'; alias?: string }
  | { name: 'yomigana_gt'; alias?: string }
  | { name: 'yomigana_gte'; alias?: string }
  | { name: 'yomigana_contains'; alias?: string }
  | { name: 'yomigana_not_contains'; alias?: string }
  | { name: 'yomigana_starts_with'; alias?: string }
  | { name: 'yomigana_not_starts_with'; alias?: string }
  | { name: 'yomigana_ends_with'; alias?: string }
  | { name: 'yomigana_not_ends_with'; alias?: string }
  | { name: 'AND'; alias?: string }
  | { name: 'OR'; alias?: string }
  | { name: 'NOT'; alias?: string }

export interface ServiceUpdateManyWithWhereNestedInput {
  where?: ServiceScalarWhereInput
  data?: ServiceUpdateManyDataInput
}
export type ServiceUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof ServiceUpdateManyWithWhereNestedInput, string>
  | { name: 'where'; alias?: string }
  | { name: 'data'; alias?: string }

export interface ServiceUpdateManyDataInput {
  address?: string | null
  description?: string | null
  freetrial?: string | null
  isOnline?: boolean | null
  inquiry?: string | null
  likeCount?: number | null
  multiplans?: string | null
  note?: string | null
  phonenumber?: string | null
  photoURL?: string | null
  place?: string | null
  price?: number | null
  rating?: number | null
  ratingCount?: number | null
  tagline?: string | null
  title?: string | null
  url?: string | null
  viewCount?: number | null
  yomigana?: string | null
}
export type ServiceUpdateManyDataInputInputObject =
  | Extract<keyof ServiceUpdateManyDataInput, string>
  | { name: 'address'; alias?: string }
  | { name: 'description'; alias?: string }
  | { name: 'freetrial'; alias?: string }
  | { name: 'isOnline'; alias?: string }
  | { name: 'inquiry'; alias?: string }
  | { name: 'likeCount'; alias?: string }
  | { name: 'multiplans'; alias?: string }
  | { name: 'note'; alias?: string }
  | { name: 'phonenumber'; alias?: string }
  | { name: 'photoURL'; alias?: string }
  | { name: 'place'; alias?: string }
  | { name: 'price'; alias?: string }
  | { name: 'rating'; alias?: string }
  | { name: 'ratingCount'; alias?: string }
  | { name: 'tagline'; alias?: string }
  | { name: 'title'; alias?: string }
  | { name: 'url'; alias?: string }
  | { name: 'viewCount'; alias?: string }
  | { name: 'yomigana'; alias?: string }

export interface CategoryUpdateManyMutationInput {
  name?: string | null
  shortDescription?: string | null
  description?: string | null
}
export type CategoryUpdateManyMutationInputInputObject =
  | Extract<keyof CategoryUpdateManyMutationInput, string>
  | { name: 'name'; alias?: string }
  | { name: 'shortDescription'; alias?: string }
  | { name: 'description'; alias?: string }

export interface ServiceUpdateInput {
  address?: string | null
  category?: CategoryUpdateOneWithoutServicesInput | null
  description?: string | null
  freetrial?: string | null
  isOnline?: boolean | null
  inquiry?: string | null
  likeCount?: number | null
  multiplans?: string | null
  note?: string | null
  phonenumber?: string | null
  photoURL?: string | null
  place?: string | null
  price?: number | null
  rating?: number | null
  ratingCount?: number | null
  reviews?: ReviewUpdateManyWithoutServiceInput | null
  tagline?: string | null
  title?: string | null
  url?: string | null
  viewCount?: number | null
  yomigana?: string | null
}
export type ServiceUpdateInputInputObject =
  | Extract<keyof ServiceUpdateInput, string>
  | { name: 'address'; alias?: string }
  | { name: 'category'; alias?: string }
  | { name: 'description'; alias?: string }
  | { name: 'freetrial'; alias?: string }
  | { name: 'isOnline'; alias?: string }
  | { name: 'inquiry'; alias?: string }
  | { name: 'likeCount'; alias?: string }
  | { name: 'multiplans'; alias?: string }
  | { name: 'note'; alias?: string }
  | { name: 'phonenumber'; alias?: string }
  | { name: 'photoURL'; alias?: string }
  | { name: 'place'; alias?: string }
  | { name: 'price'; alias?: string }
  | { name: 'rating'; alias?: string }
  | { name: 'ratingCount'; alias?: string }
  | { name: 'reviews'; alias?: string }
  | { name: 'tagline'; alias?: string }
  | { name: 'title'; alias?: string }
  | { name: 'url'; alias?: string }
  | { name: 'viewCount'; alias?: string }
  | { name: 'yomigana'; alias?: string }

export interface ServiceUpdateManyMutationInput {
  address?: string | null
  description?: string | null
  freetrial?: string | null
  isOnline?: boolean | null
  inquiry?: string | null
  likeCount?: number | null
  multiplans?: string | null
  note?: string | null
  phonenumber?: string | null
  photoURL?: string | null
  place?: string | null
  price?: number | null
  rating?: number | null
  ratingCount?: number | null
  tagline?: string | null
  title?: string | null
  url?: string | null
  viewCount?: number | null
  yomigana?: string | null
}
export type ServiceUpdateManyMutationInputInputObject =
  | Extract<keyof ServiceUpdateManyMutationInput, string>
  | { name: 'address'; alias?: string }
  | { name: 'description'; alias?: string }
  | { name: 'freetrial'; alias?: string }
  | { name: 'isOnline'; alias?: string }
  | { name: 'inquiry'; alias?: string }
  | { name: 'likeCount'; alias?: string }
  | { name: 'multiplans'; alias?: string }
  | { name: 'note'; alias?: string }
  | { name: 'phonenumber'; alias?: string }
  | { name: 'photoURL'; alias?: string }
  | { name: 'place'; alias?: string }
  | { name: 'price'; alias?: string }
  | { name: 'rating'; alias?: string }
  | { name: 'ratingCount'; alias?: string }
  | { name: 'tagline'; alias?: string }
  | { name: 'title'; alias?: string }
  | { name: 'url'; alias?: string }
  | { name: 'viewCount'; alias?: string }
  | { name: 'yomigana'; alias?: string }

export interface CommentSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: CommentWhereInput | null
  AND?: CommentSubscriptionWhereInput[]
  OR?: CommentSubscriptionWhereInput[]
  NOT?: CommentSubscriptionWhereInput[]
}
export type CommentSubscriptionWhereInputInputObject =
  | Extract<keyof CommentSubscriptionWhereInput, string>
  | { name: 'mutation_in'; alias?: string }
  | { name: 'updatedFields_contains'; alias?: string }
  | { name: 'updatedFields_contains_every'; alias?: string }
  | { name: 'updatedFields_contains_some'; alias?: string }
  | { name: 'node'; alias?: string }
  | { name: 'AND'; alias?: string }
  | { name: 'OR'; alias?: string }
  | { name: 'NOT'; alias?: string }

export interface ReviewSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: ReviewWhereInput | null
  AND?: ReviewSubscriptionWhereInput[]
  OR?: ReviewSubscriptionWhereInput[]
  NOT?: ReviewSubscriptionWhereInput[]
}
export type ReviewSubscriptionWhereInputInputObject =
  | Extract<keyof ReviewSubscriptionWhereInput, string>
  | { name: 'mutation_in'; alias?: string }
  | { name: 'updatedFields_contains'; alias?: string }
  | { name: 'updatedFields_contains_every'; alias?: string }
  | { name: 'updatedFields_contains_some'; alias?: string }
  | { name: 'node'; alias?: string }
  | { name: 'AND'; alias?: string }
  | { name: 'OR'; alias?: string }
  | { name: 'NOT'; alias?: string }

export interface CategorySubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: CategoryWhereInput | null
  AND?: CategorySubscriptionWhereInput[]
  OR?: CategorySubscriptionWhereInput[]
  NOT?: CategorySubscriptionWhereInput[]
}
export type CategorySubscriptionWhereInputInputObject =
  | Extract<keyof CategorySubscriptionWhereInput, string>
  | { name: 'mutation_in'; alias?: string }
  | { name: 'updatedFields_contains'; alias?: string }
  | { name: 'updatedFields_contains_every'; alias?: string }
  | { name: 'updatedFields_contains_some'; alias?: string }
  | { name: 'node'; alias?: string }
  | { name: 'AND'; alias?: string }
  | { name: 'OR'; alias?: string }
  | { name: 'NOT'; alias?: string }

export interface ServiceSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: ServiceWhereInput | null
  AND?: ServiceSubscriptionWhereInput[]
  OR?: ServiceSubscriptionWhereInput[]
  NOT?: ServiceSubscriptionWhereInput[]
}
export type ServiceSubscriptionWhereInputInputObject =
  | Extract<keyof ServiceSubscriptionWhereInput, string>
  | { name: 'mutation_in'; alias?: string }
  | { name: 'updatedFields_contains'; alias?: string }
  | { name: 'updatedFields_contains_every'; alias?: string }
  | { name: 'updatedFields_contains_some'; alias?: string }
  | { name: 'node'; alias?: string }
  | { name: 'AND'; alias?: string }
  | { name: 'OR'; alias?: string }
  | { name: 'NOT'; alias?: string }

export type ServiceOrderByInputValues =
  | 'address_ASC'
  | 'address_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'freetrial_ASC'
  | 'freetrial_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'isOnline_ASC'
  | 'isOnline_DESC'
  | 'inquiry_ASC'
  | 'inquiry_DESC'
  | 'likeCount_ASC'
  | 'likeCount_DESC'
  | 'multiplans_ASC'
  | 'multiplans_DESC'
  | 'note_ASC'
  | 'note_DESC'
  | 'phonenumber_ASC'
  | 'phonenumber_DESC'
  | 'photoURL_ASC'
  | 'photoURL_DESC'
  | 'place_ASC'
  | 'place_DESC'
  | 'price_ASC'
  | 'price_DESC'
  | 'rating_ASC'
  | 'rating_DESC'
  | 'ratingCount_ASC'
  | 'ratingCount_DESC'
  | 'tagline_ASC'
  | 'tagline_DESC'
  | 'title_ASC'
  | 'title_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'url_ASC'
  | 'url_DESC'
  | 'viewCount_ASC'
  | 'viewCount_DESC'
  | 'yomigana_ASC'
  | 'yomigana_DESC'

export type ReviewOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'rate_ASC'
  | 'rate_DESC'
  | 'rating_ASC'
  | 'rating_DESC'
  | 'text_ASC'
  | 'text_DESC'
  | 'serviceId_ASC'
  | 'serviceId_DESC'
  | 'ownerId_ASC'
  | 'ownerId_DESC'

export type CommentOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'text_ASC'
  | 'text_DESC'
  | 'ownerId_ASC'
  | 'ownerId_DESC'

export type CategoryOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'shortDescription_ASC'
  | 'shortDescription_DESC'
  | 'description_ASC'
  | 'description_DESC'

export type MutationTypeValues = 'CREATED' | 'UPDATED' | 'DELETED'
